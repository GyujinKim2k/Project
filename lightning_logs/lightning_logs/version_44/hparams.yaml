attention_head_size: 6
categorical_groups: {}
causal_attention: true
dataset_parameters:
  add_encoder_length: true
  add_relative_time_idx: true
  add_target_scales: true
  allow_missing_timesteps: true
  categorical_encoders:
    __group_id__spot_id: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_:
        '1.0': 0
        '10.0': 1
        '100.0': 2
        '1004.0': 3
        '1010.0': 4
        '1015.0': 5
        '1017.0': 6
        '1027.0': 7
        '103.0': 8
        '1030.0': 9
        '1038.0': 10
        '1041.0': 11
        '1046.0': 12
        '1049.0': 13
        '1052.0': 14
        '1053.0': 15
        '1059.0': 16
        '1062.0': 17
        '1071.0': 18
        '1075.0': 19
        '1077.0': 20
        '1079.0': 21
        '1084.0': 22
        '1086.0': 23
        '1099.0': 24
        '1101.0': 25
        '1106.0': 26
        '1107.0': 27
        '1116.0': 28
        '1119.0': 29
        '1123.0': 30
        '1127.0': 31
        '1131.0': 32
        '116.0': 33
        '1168.0': 34
        '117.0': 35
        '1176.0': 36
        '118.0': 37
        '1185.0': 38
        '1186.0': 39
        '12.0': 40
        '120.0': 41
        '1204.0': 42
        '1206.0': 43
        '1207.0': 44
        '1211.0': 45
        '1219.0': 46
        '1226.0': 47
        '1235.0': 48
        '1237.0': 49
        '1242.0': 50
        '1244.0': 51
        '1256.0': 52
        '1260.0': 53
        '1262.0': 54
        '1274.0': 55
        '1275.0': 56
        '128.0': 57
        '1282.0': 58
        '1298.0': 59
        '13.0': 60
        '1315.0': 61
        '1324.0': 62
        '1327.0': 63
        '1336.0': 64
        '1344.0': 65
        '1353.0': 66
        '1379.0': 67
        '1381.0': 68
        '1382.0': 69
        '1385.0': 70
        '1401.0': 71
        '1402.0': 72
        '1403.0': 73
        '1407.0': 74
        '1415.0': 75
        '1425.0': 76
        '1451.0': 77
        '1452.0': 78
        '1467.0': 79
        '1494.0': 80
        '1501.0': 81
        '1505.0': 82
        '1517.0': 83
        '1549.0': 84
        '1553.0': 85
        '1567.0': 86
        '1597.0': 87
        '16.0': 88
        '1602.0': 89
        '1618.0': 90
        '163.0': 91
        '1654.0': 92
        '1655.0': 93
        '1665.0': 94
        '1676.0': 95
        '1689.0': 96
        '1694.0': 97
        '1695.0': 98
        '1696.0': 99
        '1701.0': 100
        '1702.0': 101
        '1705.0': 102
        '1714.0': 103
        '1717.0': 104
        '1719.0': 105
        '1722.0': 106
        '1735.0': 107
        '1736.0': 108
        '1737.0': 109
        '1738.0': 110
        '1740.0': 111
        '1749.0': 112
        '1750.0': 113
        '1761.0': 114
        '1762.0': 115
        '1767.0': 116
        '1768.0': 117
        '1771.0': 118
        '1774.0': 119
        '1776.0': 120
        '1782.0': 121
        '1790.0': 122
        '1792.0': 123
        '1794.0': 124
        '1800.0': 125
        '1802.0': 126
        '1803.0': 127
        '1810.0': 128
        '1811.0': 129
        '1812.0': 130
        '1813.0': 131
        '1818.0': 132
        '1819.0': 133
        '1820.0': 134
        '1821.0': 135
        '1822.0': 136
        '1825.0': 137
        '1826.0': 138
        '1832.0': 139
        '1837.0': 140
        '1846.0': 141
        '1852.0': 142
        '1858.0': 143
        '1860.0': 144
        '1861.0': 145
        '1862.0': 146
        '1865.0': 147
        '1867.0': 148
        '1871.0': 149
        '1878.0': 150
        '1879.0': 151
        '1883.0': 152
        '1892.0': 153
        '1894.0': 154
        '1895.0': 155
        '1898.0': 156
        '1899.0': 157
        '1904.0': 158
        '1905.0': 159
        '1915.0': 160
        '1927.0': 161
        '1928.0': 162
        '1931.0': 163
        '1934.0': 164
        '1936.0': 165
        '1937.0': 166
        '1938.0': 167
        '1940.0': 168
        '1944.0': 169
        '1945.0': 170
        '1956.0': 171
        '1957.0': 172
        '1961.0': 173
        '1964.0': 174
        '1969.0': 175
        '1970.0': 176
        '1971.0': 177
        '1972.0': 178
        '1979.0': 179
        '1982.0': 180
        '1983.0': 181
        '199.0': 182
        '1990.0': 183
        '1992.0': 184
        '1994.0': 185
        '1996.0': 186
        '1999.0': 187
        '2003.0': 188
        '2007.0': 189
        '201.0': 190
        '2010.0': 191
        '2017.0': 192
        '2019.0': 193
        '2020.0': 194
        '2022.0': 195
        '2027.0': 196
        '2030.0': 197
        '2035.0': 198
        '2039.0': 199
        '204.0': 200
        '2042.0': 201
        '2045.0': 202
        '2049.0': 203
        '2051.0': 204
        '2057.0': 205
        '2060.0': 206
        '207.0': 207
        '2071.0': 208
        '2073.0': 209
        '2075.0': 210
        '2084.0': 211
        '2089.0': 212
        '2092.0': 213
        '2096.0': 214
        '2099.0': 215
        '210.0': 216
        '2100.0': 217
        '2103.0': 218
        '2105.0': 219
        '2106.0': 220
        '2107.0': 221
        '2110.0': 222
        '2114.0': 223
        '2120.0': 224
        '2122.0': 225
        '2123.0': 226
        '2127.0': 227
        '2130.0': 228
        '2131.0': 229
        '2132.0': 230
        '2135.0': 231
        '2137.0': 232
        '2139.0': 233
        '2140.0': 234
        '2141.0': 235
        '2142.0': 236
        '2149.0': 237
        '2150.0': 238
        '2151.0': 239
        '2152.0': 240
        '2158.0': 241
        '2160.0': 242
        '2161.0': 243
        '2163.0': 244
        '2164.0': 245
        '2165.0': 246
        '2167.0': 247
        '2173.0': 248
        '2176.0': 249
        '2177.0': 250
        '2178.0': 251
        '2188.0': 252
        '2190.0': 253
        '2193.0': 254
        '2194.0': 255
        '2197.0': 256
        '2207.0': 257
        '2208.0': 258
        '221.0': 259
        '2219.0': 260
        '2221.0': 261
        '2236.0': 262
        '2252.0': 263
        '2254.0': 264
        '2259.0': 265
        '2260.0': 266
        '2264.0': 267
        '2266.0': 268
        '2269.0': 269
        '2272.0': 270
        '2273.0': 271
        '2277.0': 272
        '2278.0': 273
        '2283.0': 274
        '2289.0': 275
        '229.0': 276
        '2292.0': 277
        '2296.0': 278
        '230.0': 279
        '2301.0': 280
        '2302.0': 281
        '2303.0': 282
        '2304.0': 283
        '2305.0': 284
        '2308.0': 285
        '2311.0': 286
        '2312.0': 287
        '2318.0': 288
        '2320.0': 289
        '2321.0': 290
        '2322.0': 291
        '2330.0': 292
        '2334.0': 293
        '2340.0': 294
        '2342.0': 295
        '2345.0': 296
        '2346.0': 297
        '2347.0': 298
        '2350.0': 299
        '2351.0': 300
        '2352.0': 301
        '2353.0': 302
        '2360.0': 303
        '2363.0': 304
        '2372.0': 305
        '2378.0': 306
        '2380.0': 307
        '2382.0': 308
        '2388.0': 309
        '2389.0': 310
        '2390.0': 311
        '2392.0': 312
        '2393.0': 313
        '2395.0': 314
        '2397.0': 315
        '2398.0': 316
        '2399.0': 317
        '2405.0': 318
        '2422.0': 319
        '2424.0': 320
        '2426.0': 321
        '2427.0': 322
        '2429.0': 323
        '2430.0': 324
        '2433.0': 325
        '2437.0': 326
        '2443.0': 327
        '2449.0': 328
        '2455.0': 329
        '2456.0': 330
        '248.0': 331
        '254.0': 332
        '257.0': 333
        '258.0': 334
        '270.0': 335
        '275.0': 336
        '292.0': 337
        '307.0': 338
        '315.0': 339
        '324.0': 340
        '3270.0': 341
        '3271.0': 342
        '328.0': 343
        '33.0': 344
        '3415.0': 345
        '342.0': 346
        '3454.0': 347
        '353.0': 348
        '357.0': 349
        '3586.0': 350
        '360.0': 351
        '3616.0': 352
        '3617.0': 353
        '3621.0': 354
        '3630.0': 355
        '3631.0': 356
        '3637.0': 357
        '3638.0': 358
        '3639.0': 359
        '3642.0': 360
        '3645.0': 361
        '3650.0': 362
        '3651.0': 363
        '3652.0': 364
        '3660.0': 365
        '3669.0': 366
        '3701.0': 367
        '3702.0': 368
        '3703.0': 369
        '3704.0': 370
        '3714.0': 371
        '3715.0': 372
        '3732.0': 373
        '3733.0': 374
        '3742.0': 375
        '3744.0': 376
        '3762.0': 377
        '3764.0': 378
        '3804.0': 379
        '39.0': 380
        '417.0': 381
        '419.0': 382
        '431.0': 383
        '432.0': 384
        '443.0': 385
        '465.0': 386
        '467.0': 387
        '482.0': 388
        '484.0': 389
        '489.0': 390
        '491.0': 391
        '495.0': 392
        '497.0': 393
        '498.0': 394
        '504.0': 395
        '536.0': 396
        '546.0': 397
        '547.0': 398
        '551.0': 399
        '557.0': 400
        '559.0': 401
        '565.0': 402
        '570.0': 403
        '579.0': 404
        '584.0': 405
        '592.0': 406
        '60.0': 407
        '601.0': 408
        '61.0': 409
        '617.0': 410
        '62.0': 411
        '634.0': 412
        '636.0': 413
        '643.0': 414
        '66.0': 415
        '666.0': 416
        '667.0': 417
        '671.0': 418
        '681.0': 419
        '689.0': 420
        '694.0': 421
        '695.0': 422
        '696.0': 423
        '7.0': 424
        '709.0': 425
        '712.0': 426
        '728.0': 427
        '73.0': 428
        '736.0': 429
        '742.0': 430
        '743.0': 431
        '759.0': 432
        '777.0': 433
        '789.0': 434
        '79.0': 435
        '793.0': 436
        '795.0': 437
        '797.0': 438
        '8.0': 439
        '81.0': 440
        '813.0': 441
        '82.0': 442
        '831.0': 443
        '837.0': 444
        '84.0': 445
        '844.0': 446
        '845.0': 447
        '847.0': 448
        '857.0': 449
        '858.0': 450
        '865.0': 451
        '879.0': 452
        '88.0': 453
        '888.0': 454
        '9.0': 455
        '901.0': 456
        '915.0': 457
        '926.0': 458
        '928.0': 459
        '93.0': 460
        '945.0': 461
        '954.0': 462
        '982.0': 463
        '984.0': 464
        '986.0': 465
        '992.0': 466
        '994.0': 467
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - &id001 !!python/name:numpy.ndarray ''
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 468
        - !!python/object/apply:numpy.dtype
          args:
          - U6
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 24
          - 4
          - 8
        - false
        - !!binary |
          MQAAAC4AAAAwAAAAAAAAAAAAAAAAAAAAMQAAADAAAAAuAAAAMAAAAAAAAAAAAAAAMQAAADAAAAAw
          AAAALgAAADAAAAAAAAAAMQAAADAAAAAwAAAANAAAAC4AAAAwAAAAMQAAADAAAAAxAAAAMAAAAC4A
          AAAwAAAAMQAAADAAAAAxAAAANQAAAC4AAAAwAAAAMQAAADAAAAAxAAAANwAAAC4AAAAwAAAAMQAA
          ADAAAAAyAAAANwAAAC4AAAAwAAAAMQAAADAAAAAzAAAALgAAADAAAAAAAAAAMQAAADAAAAAzAAAA
          MAAAAC4AAAAwAAAAMQAAADAAAAAzAAAAOAAAAC4AAAAwAAAAMQAAADAAAAA0AAAAMQAAAC4AAAAw
          AAAAMQAAADAAAAA0AAAANgAAAC4AAAAwAAAAMQAAADAAAAA0AAAAOQAAAC4AAAAwAAAAMQAAADAA
          AAA1AAAAMgAAAC4AAAAwAAAAMQAAADAAAAA1AAAAMwAAAC4AAAAwAAAAMQAAADAAAAA1AAAAOQAA
          AC4AAAAwAAAAMQAAADAAAAA2AAAAMgAAAC4AAAAwAAAAMQAAADAAAAA3AAAAMQAAAC4AAAAwAAAA
          MQAAADAAAAA3AAAANQAAAC4AAAAwAAAAMQAAADAAAAA3AAAANwAAAC4AAAAwAAAAMQAAADAAAAA3
          AAAAOQAAAC4AAAAwAAAAMQAAADAAAAA4AAAANAAAAC4AAAAwAAAAMQAAADAAAAA4AAAANgAAAC4A
          AAAwAAAAMQAAADAAAAA5AAAAOQAAAC4AAAAwAAAAMQAAADEAAAAwAAAAMQAAAC4AAAAwAAAAMQAA
          ADEAAAAwAAAANgAAAC4AAAAwAAAAMQAAADEAAAAwAAAANwAAAC4AAAAwAAAAMQAAADEAAAAxAAAA
          NgAAAC4AAAAwAAAAMQAAADEAAAAxAAAAOQAAAC4AAAAwAAAAMQAAADEAAAAyAAAAMwAAAC4AAAAw
          AAAAMQAAADEAAAAyAAAANwAAAC4AAAAwAAAAMQAAADEAAAAzAAAAMQAAAC4AAAAwAAAAMQAAADEA
          AAA2AAAALgAAADAAAAAAAAAAMQAAADEAAAA2AAAAOAAAAC4AAAAwAAAAMQAAADEAAAA3AAAALgAA
          ADAAAAAAAAAAMQAAADEAAAA3AAAANgAAAC4AAAAwAAAAMQAAADEAAAA4AAAALgAAADAAAAAAAAAA
          MQAAADEAAAA4AAAANQAAAC4AAAAwAAAAMQAAADEAAAA4AAAANgAAAC4AAAAwAAAAMQAAADIAAAAu
          AAAAMAAAAAAAAAAAAAAAMQAAADIAAAAwAAAALgAAADAAAAAAAAAAMQAAADIAAAAwAAAANAAAAC4A
          AAAwAAAAMQAAADIAAAAwAAAANgAAAC4AAAAwAAAAMQAAADIAAAAwAAAANwAAAC4AAAAwAAAAMQAA
          ADIAAAAxAAAAMQAAAC4AAAAwAAAAMQAAADIAAAAxAAAAOQAAAC4AAAAwAAAAMQAAADIAAAAyAAAA
          NgAAAC4AAAAwAAAAMQAAADIAAAAzAAAANQAAAC4AAAAwAAAAMQAAADIAAAAzAAAANwAAAC4AAAAw
          AAAAMQAAADIAAAA0AAAAMgAAAC4AAAAwAAAAMQAAADIAAAA0AAAANAAAAC4AAAAwAAAAMQAAADIA
          AAA1AAAANgAAAC4AAAAwAAAAMQAAADIAAAA2AAAAMAAAAC4AAAAwAAAAMQAAADIAAAA2AAAAMgAA
          AC4AAAAwAAAAMQAAADIAAAA3AAAANAAAAC4AAAAwAAAAMQAAADIAAAA3AAAANQAAAC4AAAAwAAAA
          MQAAADIAAAA4AAAALgAAADAAAAAAAAAAMQAAADIAAAA4AAAAMgAAAC4AAAAwAAAAMQAAADIAAAA5
          AAAAOAAAAC4AAAAwAAAAMQAAADMAAAAuAAAAMAAAAAAAAAAAAAAAMQAAADMAAAAxAAAANQAAAC4A
          AAAwAAAAMQAAADMAAAAyAAAANAAAAC4AAAAwAAAAMQAAADMAAAAyAAAANwAAAC4AAAAwAAAAMQAA
          ADMAAAAzAAAANgAAAC4AAAAwAAAAMQAAADMAAAA0AAAANAAAAC4AAAAwAAAAMQAAADMAAAA1AAAA
          MwAAAC4AAAAwAAAAMQAAADMAAAA3AAAAOQAAAC4AAAAwAAAAMQAAADMAAAA4AAAAMQAAAC4AAAAw
          AAAAMQAAADMAAAA4AAAAMgAAAC4AAAAwAAAAMQAAADMAAAA4AAAANQAAAC4AAAAwAAAAMQAAADQA
          AAAwAAAAMQAAAC4AAAAwAAAAMQAAADQAAAAwAAAAMgAAAC4AAAAwAAAAMQAAADQAAAAwAAAAMwAA
          AC4AAAAwAAAAMQAAADQAAAAwAAAANwAAAC4AAAAwAAAAMQAAADQAAAAxAAAANQAAAC4AAAAwAAAA
          MQAAADQAAAAyAAAANQAAAC4AAAAwAAAAMQAAADQAAAA1AAAAMQAAAC4AAAAwAAAAMQAAADQAAAA1
          AAAAMgAAAC4AAAAwAAAAMQAAADQAAAA2AAAANwAAAC4AAAAwAAAAMQAAADQAAAA5AAAANAAAAC4A
          AAAwAAAAMQAAADUAAAAwAAAAMQAAAC4AAAAwAAAAMQAAADUAAAAwAAAANQAAAC4AAAAwAAAAMQAA
          ADUAAAAxAAAANwAAAC4AAAAwAAAAMQAAADUAAAA0AAAAOQAAAC4AAAAwAAAAMQAAADUAAAA1AAAA
          MwAAAC4AAAAwAAAAMQAAADUAAAA2AAAANwAAAC4AAAAwAAAAMQAAADUAAAA5AAAANwAAAC4AAAAw
          AAAAMQAAADYAAAAuAAAAMAAAAAAAAAAAAAAAMQAAADYAAAAwAAAAMgAAAC4AAAAwAAAAMQAAADYA
          AAAxAAAAOAAAAC4AAAAwAAAAMQAAADYAAAAzAAAALgAAADAAAAAAAAAAMQAAADYAAAA1AAAANAAA
          AC4AAAAwAAAAMQAAADYAAAA1AAAANQAAAC4AAAAwAAAAMQAAADYAAAA2AAAANQAAAC4AAAAwAAAA
          MQAAADYAAAA3AAAANgAAAC4AAAAwAAAAMQAAADYAAAA4AAAAOQAAAC4AAAAwAAAAMQAAADYAAAA5
          AAAANAAAAC4AAAAwAAAAMQAAADYAAAA5AAAANQAAAC4AAAAwAAAAMQAAADYAAAA5AAAANgAAAC4A
          AAAwAAAAMQAAADcAAAAwAAAAMQAAAC4AAAAwAAAAMQAAADcAAAAwAAAAMgAAAC4AAAAwAAAAMQAA
          ADcAAAAwAAAANQAAAC4AAAAwAAAAMQAAADcAAAAxAAAANAAAAC4AAAAwAAAAMQAAADcAAAAxAAAA
          NwAAAC4AAAAwAAAAMQAAADcAAAAxAAAAOQAAAC4AAAAwAAAAMQAAADcAAAAyAAAAMgAAAC4AAAAw
          AAAAMQAAADcAAAAzAAAANQAAAC4AAAAwAAAAMQAAADcAAAAzAAAANgAAAC4AAAAwAAAAMQAAADcA
          AAAzAAAANwAAAC4AAAAwAAAAMQAAADcAAAAzAAAAOAAAAC4AAAAwAAAAMQAAADcAAAA0AAAAMAAA
          AC4AAAAwAAAAMQAAADcAAAA0AAAAOQAAAC4AAAAwAAAAMQAAADcAAAA1AAAAMAAAAC4AAAAwAAAA
          MQAAADcAAAA2AAAAMQAAAC4AAAAwAAAAMQAAADcAAAA2AAAAMgAAAC4AAAAwAAAAMQAAADcAAAA2
          AAAANwAAAC4AAAAwAAAAMQAAADcAAAA2AAAAOAAAAC4AAAAwAAAAMQAAADcAAAA3AAAAMQAAAC4A
          AAAwAAAAMQAAADcAAAA3AAAANAAAAC4AAAAwAAAAMQAAADcAAAA3AAAANgAAAC4AAAAwAAAAMQAA
          ADcAAAA4AAAAMgAAAC4AAAAwAAAAMQAAADcAAAA5AAAAMAAAAC4AAAAwAAAAMQAAADcAAAA5AAAA
          MgAAAC4AAAAwAAAAMQAAADcAAAA5AAAANAAAAC4AAAAwAAAAMQAAADgAAAAwAAAAMAAAAC4AAAAw
          AAAAMQAAADgAAAAwAAAAMgAAAC4AAAAwAAAAMQAAADgAAAAwAAAAMwAAAC4AAAAwAAAAMQAAADgA
          AAAxAAAAMAAAAC4AAAAwAAAAMQAAADgAAAAxAAAAMQAAAC4AAAAwAAAAMQAAADgAAAAxAAAAMgAA
          AC4AAAAwAAAAMQAAADgAAAAxAAAAMwAAAC4AAAAwAAAAMQAAADgAAAAxAAAAOAAAAC4AAAAwAAAA
          MQAAADgAAAAxAAAAOQAAAC4AAAAwAAAAMQAAADgAAAAyAAAAMAAAAC4AAAAwAAAAMQAAADgAAAAy
          AAAAMQAAAC4AAAAwAAAAMQAAADgAAAAyAAAAMgAAAC4AAAAwAAAAMQAAADgAAAAyAAAANQAAAC4A
          AAAwAAAAMQAAADgAAAAyAAAANgAAAC4AAAAwAAAAMQAAADgAAAAzAAAAMgAAAC4AAAAwAAAAMQAA
          ADgAAAAzAAAANwAAAC4AAAAwAAAAMQAAADgAAAA0AAAANgAAAC4AAAAwAAAAMQAAADgAAAA1AAAA
          MgAAAC4AAAAwAAAAMQAAADgAAAA1AAAAOAAAAC4AAAAwAAAAMQAAADgAAAA2AAAAMAAAAC4AAAAw
          AAAAMQAAADgAAAA2AAAAMQAAAC4AAAAwAAAAMQAAADgAAAA2AAAAMgAAAC4AAAAwAAAAMQAAADgA
          AAA2AAAANQAAAC4AAAAwAAAAMQAAADgAAAA2AAAANwAAAC4AAAAwAAAAMQAAADgAAAA3AAAAMQAA
          AC4AAAAwAAAAMQAAADgAAAA3AAAAOAAAAC4AAAAwAAAAMQAAADgAAAA3AAAAOQAAAC4AAAAwAAAA
          MQAAADgAAAA4AAAAMwAAAC4AAAAwAAAAMQAAADgAAAA5AAAAMgAAAC4AAAAwAAAAMQAAADgAAAA5
          AAAANAAAAC4AAAAwAAAAMQAAADgAAAA5AAAANQAAAC4AAAAwAAAAMQAAADgAAAA5AAAAOAAAAC4A
          AAAwAAAAMQAAADgAAAA5AAAAOQAAAC4AAAAwAAAAMQAAADkAAAAwAAAANAAAAC4AAAAwAAAAMQAA
          ADkAAAAwAAAANQAAAC4AAAAwAAAAMQAAADkAAAAxAAAANQAAAC4AAAAwAAAAMQAAADkAAAAyAAAA
          NwAAAC4AAAAwAAAAMQAAADkAAAAyAAAAOAAAAC4AAAAwAAAAMQAAADkAAAAzAAAAMQAAAC4AAAAw
          AAAAMQAAADkAAAAzAAAANAAAAC4AAAAwAAAAMQAAADkAAAAzAAAANgAAAC4AAAAwAAAAMQAAADkA
          AAAzAAAANwAAAC4AAAAwAAAAMQAAADkAAAAzAAAAOAAAAC4AAAAwAAAAMQAAADkAAAA0AAAAMAAA
          AC4AAAAwAAAAMQAAADkAAAA0AAAANAAAAC4AAAAwAAAAMQAAADkAAAA0AAAANQAAAC4AAAAwAAAA
          MQAAADkAAAA1AAAANgAAAC4AAAAwAAAAMQAAADkAAAA1AAAANwAAAC4AAAAwAAAAMQAAADkAAAA2
          AAAAMQAAAC4AAAAwAAAAMQAAADkAAAA2AAAANAAAAC4AAAAwAAAAMQAAADkAAAA2AAAAOQAAAC4A
          AAAwAAAAMQAAADkAAAA3AAAAMAAAAC4AAAAwAAAAMQAAADkAAAA3AAAAMQAAAC4AAAAwAAAAMQAA
          ADkAAAA3AAAAMgAAAC4AAAAwAAAAMQAAADkAAAA3AAAAOQAAAC4AAAAwAAAAMQAAADkAAAA4AAAA
          MgAAAC4AAAAwAAAAMQAAADkAAAA4AAAAMwAAAC4AAAAwAAAAMQAAADkAAAA5AAAALgAAADAAAAAA
          AAAAMQAAADkAAAA5AAAAMAAAAC4AAAAwAAAAMQAAADkAAAA5AAAAMgAAAC4AAAAwAAAAMQAAADkA
          AAA5AAAANAAAAC4AAAAwAAAAMQAAADkAAAA5AAAANgAAAC4AAAAwAAAAMQAAADkAAAA5AAAAOQAA
          AC4AAAAwAAAAMgAAADAAAAAwAAAAMwAAAC4AAAAwAAAAMgAAADAAAAAwAAAANwAAAC4AAAAwAAAA
          MgAAADAAAAAxAAAALgAAADAAAAAAAAAAMgAAADAAAAAxAAAAMAAAAC4AAAAwAAAAMgAAADAAAAAx
          AAAANwAAAC4AAAAwAAAAMgAAADAAAAAxAAAAOQAAAC4AAAAwAAAAMgAAADAAAAAyAAAAMAAAAC4A
          AAAwAAAAMgAAADAAAAAyAAAAMgAAAC4AAAAwAAAAMgAAADAAAAAyAAAANwAAAC4AAAAwAAAAMgAA
          ADAAAAAzAAAAMAAAAC4AAAAwAAAAMgAAADAAAAAzAAAANQAAAC4AAAAwAAAAMgAAADAAAAAzAAAA
          OQAAAC4AAAAwAAAAMgAAADAAAAA0AAAALgAAADAAAAAAAAAAMgAAADAAAAA0AAAAMgAAAC4AAAAw
          AAAAMgAAADAAAAA0AAAANQAAAC4AAAAwAAAAMgAAADAAAAA0AAAAOQAAAC4AAAAwAAAAMgAAADAA
          AAA1AAAAMQAAAC4AAAAwAAAAMgAAADAAAAA1AAAANwAAAC4AAAAwAAAAMgAAADAAAAA2AAAAMAAA
          AC4AAAAwAAAAMgAAADAAAAA3AAAALgAAADAAAAAAAAAAMgAAADAAAAA3AAAAMQAAAC4AAAAwAAAA
          MgAAADAAAAA3AAAAMwAAAC4AAAAwAAAAMgAAADAAAAA3AAAANQAAAC4AAAAwAAAAMgAAADAAAAA4
          AAAANAAAAC4AAAAwAAAAMgAAADAAAAA4AAAAOQAAAC4AAAAwAAAAMgAAADAAAAA5AAAAMgAAAC4A
          AAAwAAAAMgAAADAAAAA5AAAANgAAAC4AAAAwAAAAMgAAADAAAAA5AAAAOQAAAC4AAAAwAAAAMgAA
          ADEAAAAwAAAALgAAADAAAAAAAAAAMgAAADEAAAAwAAAAMAAAAC4AAAAwAAAAMgAAADEAAAAwAAAA
          MwAAAC4AAAAwAAAAMgAAADEAAAAwAAAANQAAAC4AAAAwAAAAMgAAADEAAAAwAAAANgAAAC4AAAAw
          AAAAMgAAADEAAAAwAAAANwAAAC4AAAAwAAAAMgAAADEAAAAxAAAAMAAAAC4AAAAwAAAAMgAAADEA
          AAAxAAAANAAAAC4AAAAwAAAAMgAAADEAAAAyAAAAMAAAAC4AAAAwAAAAMgAAADEAAAAyAAAAMgAA
          AC4AAAAwAAAAMgAAADEAAAAyAAAAMwAAAC4AAAAwAAAAMgAAADEAAAAyAAAANwAAAC4AAAAwAAAA
          MgAAADEAAAAzAAAAMAAAAC4AAAAwAAAAMgAAADEAAAAzAAAAMQAAAC4AAAAwAAAAMgAAADEAAAAz
          AAAAMgAAAC4AAAAwAAAAMgAAADEAAAAzAAAANQAAAC4AAAAwAAAAMgAAADEAAAAzAAAANwAAAC4A
          AAAwAAAAMgAAADEAAAAzAAAAOQAAAC4AAAAwAAAAMgAAADEAAAA0AAAAMAAAAC4AAAAwAAAAMgAA
          ADEAAAA0AAAAMQAAAC4AAAAwAAAAMgAAADEAAAA0AAAAMgAAAC4AAAAwAAAAMgAAADEAAAA0AAAA
          OQAAAC4AAAAwAAAAMgAAADEAAAA1AAAAMAAAAC4AAAAwAAAAMgAAADEAAAA1AAAAMQAAAC4AAAAw
          AAAAMgAAADEAAAA1AAAAMgAAAC4AAAAwAAAAMgAAADEAAAA1AAAAOAAAAC4AAAAwAAAAMgAAADEA
          AAA2AAAAMAAAAC4AAAAwAAAAMgAAADEAAAA2AAAAMQAAAC4AAAAwAAAAMgAAADEAAAA2AAAAMwAA
          AC4AAAAwAAAAMgAAADEAAAA2AAAANAAAAC4AAAAwAAAAMgAAADEAAAA2AAAANQAAAC4AAAAwAAAA
          MgAAADEAAAA2AAAANwAAAC4AAAAwAAAAMgAAADEAAAA3AAAAMwAAAC4AAAAwAAAAMgAAADEAAAA3
          AAAANgAAAC4AAAAwAAAAMgAAADEAAAA3AAAANwAAAC4AAAAwAAAAMgAAADEAAAA3AAAAOAAAAC4A
          AAAwAAAAMgAAADEAAAA4AAAAOAAAAC4AAAAwAAAAMgAAADEAAAA5AAAAMAAAAC4AAAAwAAAAMgAA
          ADEAAAA5AAAAMwAAAC4AAAAwAAAAMgAAADEAAAA5AAAANAAAAC4AAAAwAAAAMgAAADEAAAA5AAAA
          NwAAAC4AAAAwAAAAMgAAADIAAAAwAAAANwAAAC4AAAAwAAAAMgAAADIAAAAwAAAAOAAAAC4AAAAw
          AAAAMgAAADIAAAAxAAAALgAAADAAAAAAAAAAMgAAADIAAAAxAAAAOQAAAC4AAAAwAAAAMgAAADIA
          AAAyAAAAMQAAAC4AAAAwAAAAMgAAADIAAAAzAAAANgAAAC4AAAAwAAAAMgAAADIAAAA1AAAAMgAA
          AC4AAAAwAAAAMgAAADIAAAA1AAAANAAAAC4AAAAwAAAAMgAAADIAAAA1AAAAOQAAAC4AAAAwAAAA
          MgAAADIAAAA2AAAAMAAAAC4AAAAwAAAAMgAAADIAAAA2AAAANAAAAC4AAAAwAAAAMgAAADIAAAA2
          AAAANgAAAC4AAAAwAAAAMgAAADIAAAA2AAAAOQAAAC4AAAAwAAAAMgAAADIAAAA3AAAAMgAAAC4A
          AAAwAAAAMgAAADIAAAA3AAAAMwAAAC4AAAAwAAAAMgAAADIAAAA3AAAANwAAAC4AAAAwAAAAMgAA
          ADIAAAA3AAAAOAAAAC4AAAAwAAAAMgAAADIAAAA4AAAAMwAAAC4AAAAwAAAAMgAAADIAAAA4AAAA
          OQAAAC4AAAAwAAAAMgAAADIAAAA5AAAALgAAADAAAAAAAAAAMgAAADIAAAA5AAAAMgAAAC4AAAAw
          AAAAMgAAADIAAAA5AAAANgAAAC4AAAAwAAAAMgAAADMAAAAwAAAALgAAADAAAAAAAAAAMgAAADMA
          AAAwAAAAMQAAAC4AAAAwAAAAMgAAADMAAAAwAAAAMgAAAC4AAAAwAAAAMgAAADMAAAAwAAAAMwAA
          AC4AAAAwAAAAMgAAADMAAAAwAAAANAAAAC4AAAAwAAAAMgAAADMAAAAwAAAANQAAAC4AAAAwAAAA
          MgAAADMAAAAwAAAAOAAAAC4AAAAwAAAAMgAAADMAAAAxAAAAMQAAAC4AAAAwAAAAMgAAADMAAAAx
          AAAAMgAAAC4AAAAwAAAAMgAAADMAAAAxAAAAOAAAAC4AAAAwAAAAMgAAADMAAAAyAAAAMAAAAC4A
          AAAwAAAAMgAAADMAAAAyAAAAMQAAAC4AAAAwAAAAMgAAADMAAAAyAAAAMgAAAC4AAAAwAAAAMgAA
          ADMAAAAzAAAAMAAAAC4AAAAwAAAAMgAAADMAAAAzAAAANAAAAC4AAAAwAAAAMgAAADMAAAA0AAAA
          MAAAAC4AAAAwAAAAMgAAADMAAAA0AAAAMgAAAC4AAAAwAAAAMgAAADMAAAA0AAAANQAAAC4AAAAw
          AAAAMgAAADMAAAA0AAAANgAAAC4AAAAwAAAAMgAAADMAAAA0AAAANwAAAC4AAAAwAAAAMgAAADMA
          AAA1AAAAMAAAAC4AAAAwAAAAMgAAADMAAAA1AAAAMQAAAC4AAAAwAAAAMgAAADMAAAA1AAAAMgAA
          AC4AAAAwAAAAMgAAADMAAAA1AAAAMwAAAC4AAAAwAAAAMgAAADMAAAA2AAAAMAAAAC4AAAAwAAAA
          MgAAADMAAAA2AAAAMwAAAC4AAAAwAAAAMgAAADMAAAA3AAAAMgAAAC4AAAAwAAAAMgAAADMAAAA3
          AAAAOAAAAC4AAAAwAAAAMgAAADMAAAA4AAAAMAAAAC4AAAAwAAAAMgAAADMAAAA4AAAAMgAAAC4A
          AAAwAAAAMgAAADMAAAA4AAAAOAAAAC4AAAAwAAAAMgAAADMAAAA4AAAAOQAAAC4AAAAwAAAAMgAA
          ADMAAAA5AAAAMAAAAC4AAAAwAAAAMgAAADMAAAA5AAAAMgAAAC4AAAAwAAAAMgAAADMAAAA5AAAA
          MwAAAC4AAAAwAAAAMgAAADMAAAA5AAAANQAAAC4AAAAwAAAAMgAAADMAAAA5AAAANwAAAC4AAAAw
          AAAAMgAAADMAAAA5AAAAOAAAAC4AAAAwAAAAMgAAADMAAAA5AAAAOQAAAC4AAAAwAAAAMgAAADQA
          AAAwAAAANQAAAC4AAAAwAAAAMgAAADQAAAAyAAAAMgAAAC4AAAAwAAAAMgAAADQAAAAyAAAANAAA
          AC4AAAAwAAAAMgAAADQAAAAyAAAANgAAAC4AAAAwAAAAMgAAADQAAAAyAAAANwAAAC4AAAAwAAAA
          MgAAADQAAAAyAAAAOQAAAC4AAAAwAAAAMgAAADQAAAAzAAAAMAAAAC4AAAAwAAAAMgAAADQAAAAz
          AAAAMwAAAC4AAAAwAAAAMgAAADQAAAAzAAAANwAAAC4AAAAwAAAAMgAAADQAAAA0AAAAMwAAAC4A
          AAAwAAAAMgAAADQAAAA0AAAAOQAAAC4AAAAwAAAAMgAAADQAAAA1AAAANQAAAC4AAAAwAAAAMgAA
          ADQAAAA1AAAANgAAAC4AAAAwAAAAMgAAADQAAAA4AAAALgAAADAAAAAAAAAAMgAAADUAAAA0AAAA
          LgAAADAAAAAAAAAAMgAAADUAAAA3AAAALgAAADAAAAAAAAAAMgAAADUAAAA4AAAALgAAADAAAAAA
          AAAAMgAAADcAAAAwAAAALgAAADAAAAAAAAAAMgAAADcAAAA1AAAALgAAADAAAAAAAAAAMgAAADkA
          AAAyAAAALgAAADAAAAAAAAAAMwAAADAAAAA3AAAALgAAADAAAAAAAAAAMwAAADEAAAA1AAAALgAA
          ADAAAAAAAAAAMwAAADIAAAA0AAAALgAAADAAAAAAAAAAMwAAADIAAAA3AAAAMAAAAC4AAAAwAAAA
          MwAAADIAAAA3AAAAMQAAAC4AAAAwAAAAMwAAADIAAAA4AAAALgAAADAAAAAAAAAAMwAAADMAAAAu
          AAAAMAAAAAAAAAAAAAAAMwAAADQAAAAxAAAANQAAAC4AAAAwAAAAMwAAADQAAAAyAAAALgAAADAA
          AAAAAAAAMwAAADQAAAA1AAAANAAAAC4AAAAwAAAAMwAAADUAAAAzAAAALgAAADAAAAAAAAAAMwAA
          ADUAAAA3AAAALgAAADAAAAAAAAAAMwAAADUAAAA4AAAANgAAAC4AAAAwAAAAMwAAADYAAAAwAAAA
          LgAAADAAAAAAAAAAMwAAADYAAAAxAAAANgAAAC4AAAAwAAAAMwAAADYAAAAxAAAANwAAAC4AAAAw
          AAAAMwAAADYAAAAyAAAAMQAAAC4AAAAwAAAAMwAAADYAAAAzAAAAMAAAAC4AAAAwAAAAMwAAADYA
          AAAzAAAAMQAAAC4AAAAwAAAAMwAAADYAAAAzAAAANwAAAC4AAAAwAAAAMwAAADYAAAAzAAAAOAAA
          AC4AAAAwAAAAMwAAADYAAAAzAAAAOQAAAC4AAAAwAAAAMwAAADYAAAA0AAAAMgAAAC4AAAAwAAAA
          MwAAADYAAAA0AAAANQAAAC4AAAAwAAAAMwAAADYAAAA1AAAAMAAAAC4AAAAwAAAAMwAAADYAAAA1
          AAAAMQAAAC4AAAAwAAAAMwAAADYAAAA1AAAAMgAAAC4AAAAwAAAAMwAAADYAAAA2AAAAMAAAAC4A
          AAAwAAAAMwAAADYAAAA2AAAAOQAAAC4AAAAwAAAAMwAAADcAAAAwAAAAMQAAAC4AAAAwAAAAMwAA
          ADcAAAAwAAAAMgAAAC4AAAAwAAAAMwAAADcAAAAwAAAAMwAAAC4AAAAwAAAAMwAAADcAAAAwAAAA
          NAAAAC4AAAAwAAAAMwAAADcAAAAxAAAANAAAAC4AAAAwAAAAMwAAADcAAAAxAAAANQAAAC4AAAAw
          AAAAMwAAADcAAAAzAAAAMgAAAC4AAAAwAAAAMwAAADcAAAAzAAAAMwAAAC4AAAAwAAAAMwAAADcA
          AAA0AAAAMgAAAC4AAAAwAAAAMwAAADcAAAA0AAAANAAAAC4AAAAwAAAAMwAAADcAAAA2AAAAMgAA
          AC4AAAAwAAAAMwAAADcAAAA2AAAANAAAAC4AAAAwAAAAMwAAADgAAAAwAAAANAAAAC4AAAAwAAAA
          MwAAADkAAAAuAAAAMAAAAAAAAAAAAAAANAAAADEAAAA3AAAALgAAADAAAAAAAAAANAAAADEAAAA5
          AAAALgAAADAAAAAAAAAANAAAADMAAAAxAAAALgAAADAAAAAAAAAANAAAADMAAAAyAAAALgAAADAA
          AAAAAAAANAAAADQAAAAzAAAALgAAADAAAAAAAAAANAAAADYAAAA1AAAALgAAADAAAAAAAAAANAAA
          ADYAAAA3AAAALgAAADAAAAAAAAAANAAAADgAAAAyAAAALgAAADAAAAAAAAAANAAAADgAAAA0AAAA
          LgAAADAAAAAAAAAANAAAADgAAAA5AAAALgAAADAAAAAAAAAANAAAADkAAAAxAAAALgAAADAAAAAA
          AAAANAAAADkAAAA1AAAALgAAADAAAAAAAAAANAAAADkAAAA3AAAALgAAADAAAAAAAAAANAAAADkA
          AAA4AAAALgAAADAAAAAAAAAANQAAADAAAAA0AAAALgAAADAAAAAAAAAANQAAADMAAAA2AAAALgAA
          ADAAAAAAAAAANQAAADQAAAA2AAAALgAAADAAAAAAAAAANQAAADQAAAA3AAAALgAAADAAAAAAAAAA
          NQAAADUAAAAxAAAALgAAADAAAAAAAAAANQAAADUAAAA3AAAALgAAADAAAAAAAAAANQAAADUAAAA5
          AAAALgAAADAAAAAAAAAANQAAADYAAAA1AAAALgAAADAAAAAAAAAANQAAADcAAAAwAAAALgAAADAA
          AAAAAAAANQAAADcAAAA5AAAALgAAADAAAAAAAAAANQAAADgAAAA0AAAALgAAADAAAAAAAAAANQAA
          ADkAAAAyAAAALgAAADAAAAAAAAAANgAAADAAAAAuAAAAMAAAAAAAAAAAAAAANgAAADAAAAAxAAAA
          LgAAADAAAAAAAAAANgAAADEAAAAuAAAAMAAAAAAAAAAAAAAANgAAADEAAAA3AAAALgAAADAAAAAA
          AAAANgAAADIAAAAuAAAAMAAAAAAAAAAAAAAANgAAADMAAAA0AAAALgAAADAAAAAAAAAANgAAADMA
          AAA2AAAALgAAADAAAAAAAAAANgAAADQAAAAzAAAALgAAADAAAAAAAAAANgAAADYAAAAuAAAAMAAA
          AAAAAAAAAAAANgAAADYAAAA2AAAALgAAADAAAAAAAAAANgAAADYAAAA3AAAALgAAADAAAAAAAAAA
          NgAAADcAAAAxAAAALgAAADAAAAAAAAAANgAAADgAAAAxAAAALgAAADAAAAAAAAAANgAAADgAAAA5
          AAAALgAAADAAAAAAAAAANgAAADkAAAA0AAAALgAAADAAAAAAAAAANgAAADkAAAA1AAAALgAAADAA
          AAAAAAAANgAAADkAAAA2AAAALgAAADAAAAAAAAAANwAAAC4AAAAwAAAAAAAAAAAAAAAAAAAANwAA
          ADAAAAA5AAAALgAAADAAAAAAAAAANwAAADEAAAAyAAAALgAAADAAAAAAAAAANwAAADIAAAA4AAAA
          LgAAADAAAAAAAAAANwAAADMAAAAuAAAAMAAAAAAAAAAAAAAANwAAADMAAAA2AAAALgAAADAAAAAA
          AAAANwAAADQAAAAyAAAALgAAADAAAAAAAAAANwAAADQAAAAzAAAALgAAADAAAAAAAAAANwAAADUA
          AAA5AAAALgAAADAAAAAAAAAANwAAADcAAAA3AAAALgAAADAAAAAAAAAANwAAADgAAAA5AAAALgAA
          ADAAAAAAAAAANwAAADkAAAAuAAAAMAAAAAAAAAAAAAAANwAAADkAAAAzAAAALgAAADAAAAAAAAAA
          NwAAADkAAAA1AAAALgAAADAAAAAAAAAANwAAADkAAAA3AAAALgAAADAAAAAAAAAAOAAAAC4AAAAw
          AAAAAAAAAAAAAAAAAAAAOAAAADEAAAAuAAAAMAAAAAAAAAAAAAAAOAAAADEAAAAzAAAALgAAADAA
          AAAAAAAAOAAAADIAAAAuAAAAMAAAAAAAAAAAAAAAOAAAADMAAAAxAAAALgAAADAAAAAAAAAAOAAA
          ADMAAAA3AAAALgAAADAAAAAAAAAAOAAAADQAAAAuAAAAMAAAAAAAAAAAAAAAOAAAADQAAAA0AAAA
          LgAAADAAAAAAAAAAOAAAADQAAAA1AAAALgAAADAAAAAAAAAAOAAAADQAAAA3AAAALgAAADAAAAAA
          AAAAOAAAADUAAAA3AAAALgAAADAAAAAAAAAAOAAAADUAAAA4AAAALgAAADAAAAAAAAAAOAAAADYA
          AAA1AAAALgAAADAAAAAAAAAAOAAAADcAAAA5AAAALgAAADAAAAAAAAAAOAAAADgAAAAuAAAAMAAA
          AAAAAAAAAAAAOAAAADgAAAA4AAAALgAAADAAAAAAAAAAOQAAAC4AAAAwAAAAAAAAAAAAAAAAAAAA
          OQAAADAAAAAxAAAALgAAADAAAAAAAAAAOQAAADEAAAA1AAAALgAAADAAAAAAAAAAOQAAADIAAAA2
          AAAALgAAADAAAAAAAAAAOQAAADIAAAA4AAAALgAAADAAAAAAAAAAOQAAADMAAAAuAAAAMAAAAAAA
          AAAAAAAAOQAAADQAAAA1AAAALgAAADAAAAAAAAAAOQAAADUAAAA0AAAALgAAADAAAAAAAAAAOQAA
          ADgAAAAyAAAALgAAADAAAAAAAAAAOQAAADgAAAA0AAAALgAAADAAAAAAAAAAOQAAADgAAAA2AAAA
          LgAAADAAAAAAAAAAOQAAADkAAAAyAAAALgAAADAAAAAAAAAAOQAAADkAAAA0AAAALgAAADAAAAAA
          AAAA
      warn: true
    __group_id__vehicle_type: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_:
        Compact: 0
        Compact HEV: 1
        Compact SUV: 2
        Electric: 3
        Fullsize SUV: 4
        Imported: 5
        Micro SUV: 6
        Microcar: 7
        Midsize: 8
        Midsize HEV: 9
        Midsize SUV: 10
        Passenger Van: 11
        Subcompact: 12
        Subcompact SUV: 13
        Subcompact SUV HEV: 14
        Upper Midsize: 15
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 16
        - !!python/object/apply:numpy.dtype
          args:
          - U18
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 72
          - 4
          - 8
        - false
        - !!binary |
          QwAAAG8AAABtAAAAcAAAAGEAAABjAAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAQwAAAG8AAABtAAAAcAAAAGEAAABjAAAAdAAAACAAAABIAAAARQAAAFYA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQwAAAG8AAABtAAAAcAAAAGEAAABjAAAAdAAA
          ACAAAABTAAAAVQAAAFYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARQAAAGwAAABlAAAA
          YwAAAHQAAAByAAAAaQAAAGMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAARgAAAHUAAABsAAAAbAAAAHMAAABpAAAAegAAAGUAAAAgAAAAUwAAAFUAAABWAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAASQAAAG0AAABwAAAAbwAAAHIAAAB0AAAAZQAAAGQAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAGkAAABjAAAAcgAAAG8AAAAgAAAA
          UwAAAFUAAABWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAGkAAABj
          AAAAcgAAAG8AAABjAAAAYQAAAHIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAATQAAAGkAAABkAAAAcwAAAGkAAAB6AAAAZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAGkAAABkAAAAcwAAAGkAAAB6AAAAZQAAACAAAABIAAAA
          RQAAAFYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAGkAAABkAAAAcwAAAGkAAAB6
          AAAAZQAAACAAAABTAAAAVQAAAFYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAGEA
          AABzAAAAcwAAAGUAAABuAAAAZwAAAGUAAAByAAAAIAAAAFYAAABhAAAAbgAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAUwAAAHUAAABiAAAAYwAAAG8AAABtAAAAcAAAAGEAAABjAAAAdAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUwAAAHUAAABiAAAAYwAAAG8AAABtAAAAcAAAAGEAAABj
          AAAAdAAAACAAAABTAAAAVQAAAFYAAAAAAAAAAAAAAAAAAAAAAAAAUwAAAHUAAABiAAAAYwAAAG8A
          AABtAAAAcAAAAGEAAABjAAAAdAAAACAAAABTAAAAVQAAAFYAAAAgAAAASAAAAEUAAABWAAAAVQAA
          AHAAAABwAAAAZQAAAHIAAAAgAAAATQAAAGkAAABkAAAAcwAAAGkAAAB6AAAAZQAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAA
      warn: true
    dow: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id006
        '0': 0
        '1': 1
        '2': 2
        '3': 3
        '4': 4
        '5': 5
        '6': 6
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 7
        - !!python/object/apply:numpy.dtype
          args:
          - U1
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 4
          - 4
          - 8
        - false
        - !!binary |
          MAAAADEAAAAyAAAAMwAAADQAAAA1AAAANgAAAA==
      warn: true
    is_holiday: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id007
        'False': 0
        'True': 1
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 2
        - !!python/object/apply:numpy.dtype
          args:
          - U5
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 20
          - 4
          - 8
        - false
        - !!binary |
          RgAAAGEAAABsAAAAcwAAAGUAAABUAAAAcgAAAHUAAABlAAAAAAAAAA==
      warn: true
    is_weekend: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id008
        '0': 0
        '1': 1
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 2
        - !!python/object/apply:numpy.dtype
          args:
          - U1
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 4
          - 4
          - 8
        - false
        - !!binary |
          MAAAADEAAAA=
      warn: true
    month: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id009
        '1': 0
        '10': 1
        '11': 2
        '12': 3
        '2': 4
        '3': 5
        '4': 6
        '5': 7
        '6': 8
        '7': 9
        '8': 10
        '9': 11
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 12
        - !!python/object/apply:numpy.dtype
          args:
          - U2
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 8
          - 4
          - 8
        - false
        - !!binary |
          MQAAAAAAAAAxAAAAMAAAADEAAAAxAAAAMQAAADIAAAAyAAAAAAAAADMAAAAAAAAANAAAAAAAAAA1
          AAAAAAAAADYAAAAAAAAANwAAAAAAAAA4AAAAAAAAADkAAAAAAAAA
      warn: true
    quarter: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id010
        '1': 0
        '2': 1
        '3': 2
        '4': 3
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 4
        - !!python/object/apply:numpy.dtype
          args:
          - U1
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 4
          - 4
          - 8
        - false
        - !!binary |
          MQAAADIAAAAzAAAANAAAAA==
      warn: true
    region_code: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id011
        '101': 0
        '108': 1
        '112': 2
        '119': 3
        '131': 4
        '133': 5
        '143': 6
        '146': 7
        '152': 8
        '156': 9
        '159': 10
        '239': 11
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 12
        - !!python/object/apply:numpy.dtype
          args:
          - U3
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 12
          - 4
          - 8
        - false
        - !!binary |
          MQAAADAAAAAxAAAAMQAAADAAAAA4AAAAMQAAADEAAAAyAAAAMQAAADEAAAA5AAAAMQAAADMAAAAx
          AAAAMQAAADMAAAAzAAAAMQAAADQAAAAzAAAAMQAAADQAAAA2AAAAMQAAADUAAAAyAAAAMQAAADUA
          AAA2AAAAMQAAADUAAAA5AAAAMgAAADMAAAA5AAAA
      warn: true
    spot_id: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: true
      classes_: &id012
        '1.0': 1
        '10.0': 2
        '100.0': 3
        '1004.0': 4
        '1010.0': 5
        '1015.0': 6
        '1017.0': 7
        '1027.0': 8
        '103.0': 9
        '1030.0': 10
        '1038.0': 11
        '1041.0': 12
        '1046.0': 13
        '1049.0': 14
        '1052.0': 15
        '1053.0': 16
        '1059.0': 17
        '1062.0': 18
        '1071.0': 19
        '1075.0': 20
        '1077.0': 21
        '1079.0': 22
        '1084.0': 23
        '1086.0': 24
        '1099.0': 25
        '1101.0': 26
        '1106.0': 27
        '1107.0': 28
        '1116.0': 29
        '1119.0': 30
        '1123.0': 31
        '1127.0': 32
        '1131.0': 33
        '116.0': 34
        '1168.0': 35
        '117.0': 36
        '1176.0': 37
        '118.0': 38
        '1185.0': 39
        '1186.0': 40
        '12.0': 41
        '120.0': 42
        '1204.0': 43
        '1206.0': 44
        '1207.0': 45
        '1211.0': 46
        '1219.0': 47
        '1226.0': 48
        '1235.0': 49
        '1237.0': 50
        '1242.0': 51
        '1244.0': 52
        '1256.0': 53
        '1260.0': 54
        '1262.0': 55
        '1274.0': 56
        '1275.0': 57
        '128.0': 58
        '1282.0': 59
        '1298.0': 60
        '13.0': 61
        '1315.0': 62
        '1324.0': 63
        '1327.0': 64
        '1336.0': 65
        '1344.0': 66
        '1353.0': 67
        '1379.0': 68
        '1381.0': 69
        '1382.0': 70
        '1385.0': 71
        '1401.0': 72
        '1402.0': 73
        '1403.0': 74
        '1407.0': 75
        '1415.0': 76
        '1425.0': 77
        '1451.0': 78
        '1452.0': 79
        '1467.0': 80
        '1494.0': 81
        '1501.0': 82
        '1505.0': 83
        '1517.0': 84
        '1549.0': 85
        '1553.0': 86
        '1567.0': 87
        '1597.0': 88
        '16.0': 89
        '1602.0': 90
        '1618.0': 91
        '163.0': 92
        '1654.0': 93
        '1655.0': 94
        '1665.0': 95
        '1676.0': 96
        '1689.0': 97
        '1694.0': 98
        '1695.0': 99
        '1696.0': 100
        '1701.0': 101
        '1702.0': 102
        '1705.0': 103
        '1714.0': 104
        '1717.0': 105
        '1719.0': 106
        '1722.0': 107
        '1735.0': 108
        '1736.0': 109
        '1737.0': 110
        '1738.0': 111
        '1740.0': 112
        '1749.0': 113
        '1750.0': 114
        '1761.0': 115
        '1762.0': 116
        '1767.0': 117
        '1768.0': 118
        '1771.0': 119
        '1774.0': 120
        '1776.0': 121
        '1782.0': 122
        '1790.0': 123
        '1792.0': 124
        '1794.0': 125
        '1800.0': 126
        '1802.0': 127
        '1803.0': 128
        '1810.0': 129
        '1811.0': 130
        '1812.0': 131
        '1813.0': 132
        '1818.0': 133
        '1819.0': 134
        '1820.0': 135
        '1821.0': 136
        '1822.0': 137
        '1825.0': 138
        '1826.0': 139
        '1832.0': 140
        '1837.0': 141
        '1846.0': 142
        '1852.0': 143
        '1858.0': 144
        '1860.0': 145
        '1861.0': 146
        '1862.0': 147
        '1865.0': 148
        '1867.0': 149
        '1871.0': 150
        '1878.0': 151
        '1879.0': 152
        '1883.0': 153
        '1892.0': 154
        '1894.0': 155
        '1895.0': 156
        '1898.0': 157
        '1899.0': 158
        '1904.0': 159
        '1905.0': 160
        '1915.0': 161
        '1927.0': 162
        '1928.0': 163
        '1931.0': 164
        '1934.0': 165
        '1936.0': 166
        '1937.0': 167
        '1938.0': 168
        '1940.0': 169
        '1944.0': 170
        '1945.0': 171
        '1956.0': 172
        '1957.0': 173
        '1961.0': 174
        '1964.0': 175
        '1969.0': 176
        '1970.0': 177
        '1971.0': 178
        '1972.0': 179
        '1979.0': 180
        '1982.0': 181
        '1983.0': 182
        '199.0': 183
        '1990.0': 184
        '1992.0': 185
        '1994.0': 186
        '1996.0': 187
        '1999.0': 188
        '2003.0': 189
        '2007.0': 190
        '201.0': 191
        '2010.0': 192
        '2017.0': 193
        '2019.0': 194
        '2020.0': 195
        '2022.0': 196
        '2027.0': 197
        '2030.0': 198
        '2035.0': 199
        '2039.0': 200
        '204.0': 201
        '2042.0': 202
        '2045.0': 203
        '2049.0': 204
        '2051.0': 205
        '2057.0': 206
        '2060.0': 207
        '207.0': 208
        '2071.0': 209
        '2073.0': 210
        '2075.0': 211
        '2084.0': 212
        '2089.0': 213
        '2092.0': 214
        '2096.0': 215
        '2099.0': 216
        '210.0': 217
        '2100.0': 218
        '2103.0': 219
        '2105.0': 220
        '2106.0': 221
        '2107.0': 222
        '2110.0': 223
        '2114.0': 224
        '2120.0': 225
        '2122.0': 226
        '2123.0': 227
        '2127.0': 228
        '2130.0': 229
        '2131.0': 230
        '2132.0': 231
        '2135.0': 232
        '2137.0': 233
        '2139.0': 234
        '2140.0': 235
        '2141.0': 236
        '2142.0': 237
        '2149.0': 238
        '2150.0': 239
        '2151.0': 240
        '2152.0': 241
        '2158.0': 242
        '2160.0': 243
        '2161.0': 244
        '2163.0': 245
        '2164.0': 246
        '2165.0': 247
        '2167.0': 248
        '2173.0': 249
        '2176.0': 250
        '2177.0': 251
        '2178.0': 252
        '2188.0': 253
        '2190.0': 254
        '2193.0': 255
        '2194.0': 256
        '2197.0': 257
        '2207.0': 258
        '2208.0': 259
        '221.0': 260
        '2219.0': 261
        '2221.0': 262
        '2236.0': 263
        '2252.0': 264
        '2254.0': 265
        '2259.0': 266
        '2260.0': 267
        '2264.0': 268
        '2266.0': 269
        '2269.0': 270
        '2272.0': 271
        '2273.0': 272
        '2277.0': 273
        '2278.0': 274
        '2283.0': 275
        '2289.0': 276
        '229.0': 277
        '2292.0': 278
        '2296.0': 279
        '230.0': 280
        '2301.0': 281
        '2302.0': 282
        '2303.0': 283
        '2304.0': 284
        '2305.0': 285
        '2308.0': 286
        '2311.0': 287
        '2312.0': 288
        '2318.0': 289
        '2320.0': 290
        '2321.0': 291
        '2322.0': 292
        '2330.0': 293
        '2334.0': 294
        '2340.0': 295
        '2342.0': 296
        '2345.0': 297
        '2346.0': 298
        '2347.0': 299
        '2350.0': 300
        '2351.0': 301
        '2352.0': 302
        '2353.0': 303
        '2360.0': 304
        '2363.0': 305
        '2372.0': 306
        '2378.0': 307
        '2380.0': 308
        '2382.0': 309
        '2388.0': 310
        '2389.0': 311
        '2390.0': 312
        '2392.0': 313
        '2393.0': 314
        '2395.0': 315
        '2397.0': 316
        '2398.0': 317
        '2399.0': 318
        '2405.0': 319
        '2422.0': 320
        '2424.0': 321
        '2426.0': 322
        '2427.0': 323
        '2429.0': 324
        '2430.0': 325
        '2433.0': 326
        '2437.0': 327
        '2443.0': 328
        '2449.0': 329
        '2455.0': 330
        '2456.0': 331
        '248.0': 332
        '254.0': 333
        '257.0': 334
        '258.0': 335
        '270.0': 336
        '275.0': 337
        '292.0': 338
        '307.0': 339
        '315.0': 340
        '324.0': 341
        '3270.0': 342
        '3271.0': 343
        '328.0': 344
        '33.0': 345
        '3415.0': 346
        '342.0': 347
        '3454.0': 348
        '353.0': 349
        '357.0': 350
        '3586.0': 351
        '360.0': 352
        '3616.0': 353
        '3617.0': 354
        '3621.0': 355
        '3630.0': 356
        '3631.0': 357
        '3637.0': 358
        '3638.0': 359
        '3639.0': 360
        '3642.0': 361
        '3645.0': 362
        '3650.0': 363
        '3651.0': 364
        '3652.0': 365
        '3660.0': 366
        '3669.0': 367
        '3701.0': 368
        '3702.0': 369
        '3703.0': 370
        '3704.0': 371
        '3714.0': 372
        '3715.0': 373
        '3732.0': 374
        '3733.0': 375
        '3742.0': 376
        '3744.0': 377
        '3762.0': 378
        '3764.0': 379
        '3804.0': 380
        '39.0': 381
        '417.0': 382
        '419.0': 383
        '431.0': 384
        '432.0': 385
        '443.0': 386
        '465.0': 387
        '467.0': 388
        '482.0': 389
        '484.0': 390
        '489.0': 391
        '491.0': 392
        '495.0': 393
        '497.0': 394
        '498.0': 395
        '504.0': 396
        '536.0': 397
        '546.0': 398
        '547.0': 399
        '551.0': 400
        '557.0': 401
        '559.0': 402
        '565.0': 403
        '570.0': 404
        '579.0': 405
        '584.0': 406
        '592.0': 407
        '60.0': 408
        '601.0': 409
        '61.0': 410
        '617.0': 411
        '62.0': 412
        '634.0': 413
        '636.0': 414
        '643.0': 415
        '66.0': 416
        '666.0': 417
        '667.0': 418
        '671.0': 419
        '681.0': 420
        '689.0': 421
        '694.0': 422
        '695.0': 423
        '696.0': 424
        '7.0': 425
        '709.0': 426
        '712.0': 427
        '728.0': 428
        '73.0': 429
        '736.0': 430
        '742.0': 431
        '743.0': 432
        '759.0': 433
        '777.0': 434
        '789.0': 435
        '79.0': 436
        '793.0': 437
        '795.0': 438
        '797.0': 439
        '8.0': 440
        '81.0': 441
        '813.0': 442
        '82.0': 443
        '831.0': 444
        '837.0': 445
        '84.0': 446
        '844.0': 447
        '845.0': 448
        '847.0': 449
        '857.0': 450
        '858.0': 451
        '865.0': 452
        '879.0': 453
        '88.0': 454
        '888.0': 455
        '9.0': 456
        '901.0': 457
        '915.0': 458
        '926.0': 459
        '928.0': 460
        '93.0': 461
        '945.0': 462
        '954.0': 463
        '982.0': 464
        '984.0': 465
        '986.0': 466
        '992.0': 467
        '994.0': 468
        nan: 0
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 469
        - !!python/object/apply:numpy.dtype
          args:
          - U6
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 24
          - 4
          - 8
        - false
        - !!binary |
          bgAAAGEAAABuAAAAAAAAAAAAAAAAAAAAMQAAAC4AAAAwAAAAAAAAAAAAAAAAAAAAMQAAADAAAAAu
          AAAAMAAAAAAAAAAAAAAAMQAAADAAAAAwAAAALgAAADAAAAAAAAAAMQAAADAAAAAwAAAANAAAAC4A
          AAAwAAAAMQAAADAAAAAxAAAAMAAAAC4AAAAwAAAAMQAAADAAAAAxAAAANQAAAC4AAAAwAAAAMQAA
          ADAAAAAxAAAANwAAAC4AAAAwAAAAMQAAADAAAAAyAAAANwAAAC4AAAAwAAAAMQAAADAAAAAzAAAA
          LgAAADAAAAAAAAAAMQAAADAAAAAzAAAAMAAAAC4AAAAwAAAAMQAAADAAAAAzAAAAOAAAAC4AAAAw
          AAAAMQAAADAAAAA0AAAAMQAAAC4AAAAwAAAAMQAAADAAAAA0AAAANgAAAC4AAAAwAAAAMQAAADAA
          AAA0AAAAOQAAAC4AAAAwAAAAMQAAADAAAAA1AAAAMgAAAC4AAAAwAAAAMQAAADAAAAA1AAAAMwAA
          AC4AAAAwAAAAMQAAADAAAAA1AAAAOQAAAC4AAAAwAAAAMQAAADAAAAA2AAAAMgAAAC4AAAAwAAAA
          MQAAADAAAAA3AAAAMQAAAC4AAAAwAAAAMQAAADAAAAA3AAAANQAAAC4AAAAwAAAAMQAAADAAAAA3
          AAAANwAAAC4AAAAwAAAAMQAAADAAAAA3AAAAOQAAAC4AAAAwAAAAMQAAADAAAAA4AAAANAAAAC4A
          AAAwAAAAMQAAADAAAAA4AAAANgAAAC4AAAAwAAAAMQAAADAAAAA5AAAAOQAAAC4AAAAwAAAAMQAA
          ADEAAAAwAAAAMQAAAC4AAAAwAAAAMQAAADEAAAAwAAAANgAAAC4AAAAwAAAAMQAAADEAAAAwAAAA
          NwAAAC4AAAAwAAAAMQAAADEAAAAxAAAANgAAAC4AAAAwAAAAMQAAADEAAAAxAAAAOQAAAC4AAAAw
          AAAAMQAAADEAAAAyAAAAMwAAAC4AAAAwAAAAMQAAADEAAAAyAAAANwAAAC4AAAAwAAAAMQAAADEA
          AAAzAAAAMQAAAC4AAAAwAAAAMQAAADEAAAA2AAAALgAAADAAAAAAAAAAMQAAADEAAAA2AAAAOAAA
          AC4AAAAwAAAAMQAAADEAAAA3AAAALgAAADAAAAAAAAAAMQAAADEAAAA3AAAANgAAAC4AAAAwAAAA
          MQAAADEAAAA4AAAALgAAADAAAAAAAAAAMQAAADEAAAA4AAAANQAAAC4AAAAwAAAAMQAAADEAAAA4
          AAAANgAAAC4AAAAwAAAAMQAAADIAAAAuAAAAMAAAAAAAAAAAAAAAMQAAADIAAAAwAAAALgAAADAA
          AAAAAAAAMQAAADIAAAAwAAAANAAAAC4AAAAwAAAAMQAAADIAAAAwAAAANgAAAC4AAAAwAAAAMQAA
          ADIAAAAwAAAANwAAAC4AAAAwAAAAMQAAADIAAAAxAAAAMQAAAC4AAAAwAAAAMQAAADIAAAAxAAAA
          OQAAAC4AAAAwAAAAMQAAADIAAAAyAAAANgAAAC4AAAAwAAAAMQAAADIAAAAzAAAANQAAAC4AAAAw
          AAAAMQAAADIAAAAzAAAANwAAAC4AAAAwAAAAMQAAADIAAAA0AAAAMgAAAC4AAAAwAAAAMQAAADIA
          AAA0AAAANAAAAC4AAAAwAAAAMQAAADIAAAA1AAAANgAAAC4AAAAwAAAAMQAAADIAAAA2AAAAMAAA
          AC4AAAAwAAAAMQAAADIAAAA2AAAAMgAAAC4AAAAwAAAAMQAAADIAAAA3AAAANAAAAC4AAAAwAAAA
          MQAAADIAAAA3AAAANQAAAC4AAAAwAAAAMQAAADIAAAA4AAAALgAAADAAAAAAAAAAMQAAADIAAAA4
          AAAAMgAAAC4AAAAwAAAAMQAAADIAAAA5AAAAOAAAAC4AAAAwAAAAMQAAADMAAAAuAAAAMAAAAAAA
          AAAAAAAAMQAAADMAAAAxAAAANQAAAC4AAAAwAAAAMQAAADMAAAAyAAAANAAAAC4AAAAwAAAAMQAA
          ADMAAAAyAAAANwAAAC4AAAAwAAAAMQAAADMAAAAzAAAANgAAAC4AAAAwAAAAMQAAADMAAAA0AAAA
          NAAAAC4AAAAwAAAAMQAAADMAAAA1AAAAMwAAAC4AAAAwAAAAMQAAADMAAAA3AAAAOQAAAC4AAAAw
          AAAAMQAAADMAAAA4AAAAMQAAAC4AAAAwAAAAMQAAADMAAAA4AAAAMgAAAC4AAAAwAAAAMQAAADMA
          AAA4AAAANQAAAC4AAAAwAAAAMQAAADQAAAAwAAAAMQAAAC4AAAAwAAAAMQAAADQAAAAwAAAAMgAA
          AC4AAAAwAAAAMQAAADQAAAAwAAAAMwAAAC4AAAAwAAAAMQAAADQAAAAwAAAANwAAAC4AAAAwAAAA
          MQAAADQAAAAxAAAANQAAAC4AAAAwAAAAMQAAADQAAAAyAAAANQAAAC4AAAAwAAAAMQAAADQAAAA1
          AAAAMQAAAC4AAAAwAAAAMQAAADQAAAA1AAAAMgAAAC4AAAAwAAAAMQAAADQAAAA2AAAANwAAAC4A
          AAAwAAAAMQAAADQAAAA5AAAANAAAAC4AAAAwAAAAMQAAADUAAAAwAAAAMQAAAC4AAAAwAAAAMQAA
          ADUAAAAwAAAANQAAAC4AAAAwAAAAMQAAADUAAAAxAAAANwAAAC4AAAAwAAAAMQAAADUAAAA0AAAA
          OQAAAC4AAAAwAAAAMQAAADUAAAA1AAAAMwAAAC4AAAAwAAAAMQAAADUAAAA2AAAANwAAAC4AAAAw
          AAAAMQAAADUAAAA5AAAANwAAAC4AAAAwAAAAMQAAADYAAAAuAAAAMAAAAAAAAAAAAAAAMQAAADYA
          AAAwAAAAMgAAAC4AAAAwAAAAMQAAADYAAAAxAAAAOAAAAC4AAAAwAAAAMQAAADYAAAAzAAAALgAA
          ADAAAAAAAAAAMQAAADYAAAA1AAAANAAAAC4AAAAwAAAAMQAAADYAAAA1AAAANQAAAC4AAAAwAAAA
          MQAAADYAAAA2AAAANQAAAC4AAAAwAAAAMQAAADYAAAA3AAAANgAAAC4AAAAwAAAAMQAAADYAAAA4
          AAAAOQAAAC4AAAAwAAAAMQAAADYAAAA5AAAANAAAAC4AAAAwAAAAMQAAADYAAAA5AAAANQAAAC4A
          AAAwAAAAMQAAADYAAAA5AAAANgAAAC4AAAAwAAAAMQAAADcAAAAwAAAAMQAAAC4AAAAwAAAAMQAA
          ADcAAAAwAAAAMgAAAC4AAAAwAAAAMQAAADcAAAAwAAAANQAAAC4AAAAwAAAAMQAAADcAAAAxAAAA
          NAAAAC4AAAAwAAAAMQAAADcAAAAxAAAANwAAAC4AAAAwAAAAMQAAADcAAAAxAAAAOQAAAC4AAAAw
          AAAAMQAAADcAAAAyAAAAMgAAAC4AAAAwAAAAMQAAADcAAAAzAAAANQAAAC4AAAAwAAAAMQAAADcA
          AAAzAAAANgAAAC4AAAAwAAAAMQAAADcAAAAzAAAANwAAAC4AAAAwAAAAMQAAADcAAAAzAAAAOAAA
          AC4AAAAwAAAAMQAAADcAAAA0AAAAMAAAAC4AAAAwAAAAMQAAADcAAAA0AAAAOQAAAC4AAAAwAAAA
          MQAAADcAAAA1AAAAMAAAAC4AAAAwAAAAMQAAADcAAAA2AAAAMQAAAC4AAAAwAAAAMQAAADcAAAA2
          AAAAMgAAAC4AAAAwAAAAMQAAADcAAAA2AAAANwAAAC4AAAAwAAAAMQAAADcAAAA2AAAAOAAAAC4A
          AAAwAAAAMQAAADcAAAA3AAAAMQAAAC4AAAAwAAAAMQAAADcAAAA3AAAANAAAAC4AAAAwAAAAMQAA
          ADcAAAA3AAAANgAAAC4AAAAwAAAAMQAAADcAAAA4AAAAMgAAAC4AAAAwAAAAMQAAADcAAAA5AAAA
          MAAAAC4AAAAwAAAAMQAAADcAAAA5AAAAMgAAAC4AAAAwAAAAMQAAADcAAAA5AAAANAAAAC4AAAAw
          AAAAMQAAADgAAAAwAAAAMAAAAC4AAAAwAAAAMQAAADgAAAAwAAAAMgAAAC4AAAAwAAAAMQAAADgA
          AAAwAAAAMwAAAC4AAAAwAAAAMQAAADgAAAAxAAAAMAAAAC4AAAAwAAAAMQAAADgAAAAxAAAAMQAA
          AC4AAAAwAAAAMQAAADgAAAAxAAAAMgAAAC4AAAAwAAAAMQAAADgAAAAxAAAAMwAAAC4AAAAwAAAA
          MQAAADgAAAAxAAAAOAAAAC4AAAAwAAAAMQAAADgAAAAxAAAAOQAAAC4AAAAwAAAAMQAAADgAAAAy
          AAAAMAAAAC4AAAAwAAAAMQAAADgAAAAyAAAAMQAAAC4AAAAwAAAAMQAAADgAAAAyAAAAMgAAAC4A
          AAAwAAAAMQAAADgAAAAyAAAANQAAAC4AAAAwAAAAMQAAADgAAAAyAAAANgAAAC4AAAAwAAAAMQAA
          ADgAAAAzAAAAMgAAAC4AAAAwAAAAMQAAADgAAAAzAAAANwAAAC4AAAAwAAAAMQAAADgAAAA0AAAA
          NgAAAC4AAAAwAAAAMQAAADgAAAA1AAAAMgAAAC4AAAAwAAAAMQAAADgAAAA1AAAAOAAAAC4AAAAw
          AAAAMQAAADgAAAA2AAAAMAAAAC4AAAAwAAAAMQAAADgAAAA2AAAAMQAAAC4AAAAwAAAAMQAAADgA
          AAA2AAAAMgAAAC4AAAAwAAAAMQAAADgAAAA2AAAANQAAAC4AAAAwAAAAMQAAADgAAAA2AAAANwAA
          AC4AAAAwAAAAMQAAADgAAAA3AAAAMQAAAC4AAAAwAAAAMQAAADgAAAA3AAAAOAAAAC4AAAAwAAAA
          MQAAADgAAAA3AAAAOQAAAC4AAAAwAAAAMQAAADgAAAA4AAAAMwAAAC4AAAAwAAAAMQAAADgAAAA5
          AAAAMgAAAC4AAAAwAAAAMQAAADgAAAA5AAAANAAAAC4AAAAwAAAAMQAAADgAAAA5AAAANQAAAC4A
          AAAwAAAAMQAAADgAAAA5AAAAOAAAAC4AAAAwAAAAMQAAADgAAAA5AAAAOQAAAC4AAAAwAAAAMQAA
          ADkAAAAwAAAANAAAAC4AAAAwAAAAMQAAADkAAAAwAAAANQAAAC4AAAAwAAAAMQAAADkAAAAxAAAA
          NQAAAC4AAAAwAAAAMQAAADkAAAAyAAAANwAAAC4AAAAwAAAAMQAAADkAAAAyAAAAOAAAAC4AAAAw
          AAAAMQAAADkAAAAzAAAAMQAAAC4AAAAwAAAAMQAAADkAAAAzAAAANAAAAC4AAAAwAAAAMQAAADkA
          AAAzAAAANgAAAC4AAAAwAAAAMQAAADkAAAAzAAAANwAAAC4AAAAwAAAAMQAAADkAAAAzAAAAOAAA
          AC4AAAAwAAAAMQAAADkAAAA0AAAAMAAAAC4AAAAwAAAAMQAAADkAAAA0AAAANAAAAC4AAAAwAAAA
          MQAAADkAAAA0AAAANQAAAC4AAAAwAAAAMQAAADkAAAA1AAAANgAAAC4AAAAwAAAAMQAAADkAAAA1
          AAAANwAAAC4AAAAwAAAAMQAAADkAAAA2AAAAMQAAAC4AAAAwAAAAMQAAADkAAAA2AAAANAAAAC4A
          AAAwAAAAMQAAADkAAAA2AAAAOQAAAC4AAAAwAAAAMQAAADkAAAA3AAAAMAAAAC4AAAAwAAAAMQAA
          ADkAAAA3AAAAMQAAAC4AAAAwAAAAMQAAADkAAAA3AAAAMgAAAC4AAAAwAAAAMQAAADkAAAA3AAAA
          OQAAAC4AAAAwAAAAMQAAADkAAAA4AAAAMgAAAC4AAAAwAAAAMQAAADkAAAA4AAAAMwAAAC4AAAAw
          AAAAMQAAADkAAAA5AAAALgAAADAAAAAAAAAAMQAAADkAAAA5AAAAMAAAAC4AAAAwAAAAMQAAADkA
          AAA5AAAAMgAAAC4AAAAwAAAAMQAAADkAAAA5AAAANAAAAC4AAAAwAAAAMQAAADkAAAA5AAAANgAA
          AC4AAAAwAAAAMQAAADkAAAA5AAAAOQAAAC4AAAAwAAAAMgAAADAAAAAwAAAAMwAAAC4AAAAwAAAA
          MgAAADAAAAAwAAAANwAAAC4AAAAwAAAAMgAAADAAAAAxAAAALgAAADAAAAAAAAAAMgAAADAAAAAx
          AAAAMAAAAC4AAAAwAAAAMgAAADAAAAAxAAAANwAAAC4AAAAwAAAAMgAAADAAAAAxAAAAOQAAAC4A
          AAAwAAAAMgAAADAAAAAyAAAAMAAAAC4AAAAwAAAAMgAAADAAAAAyAAAAMgAAAC4AAAAwAAAAMgAA
          ADAAAAAyAAAANwAAAC4AAAAwAAAAMgAAADAAAAAzAAAAMAAAAC4AAAAwAAAAMgAAADAAAAAzAAAA
          NQAAAC4AAAAwAAAAMgAAADAAAAAzAAAAOQAAAC4AAAAwAAAAMgAAADAAAAA0AAAALgAAADAAAAAA
          AAAAMgAAADAAAAA0AAAAMgAAAC4AAAAwAAAAMgAAADAAAAA0AAAANQAAAC4AAAAwAAAAMgAAADAA
          AAA0AAAAOQAAAC4AAAAwAAAAMgAAADAAAAA1AAAAMQAAAC4AAAAwAAAAMgAAADAAAAA1AAAANwAA
          AC4AAAAwAAAAMgAAADAAAAA2AAAAMAAAAC4AAAAwAAAAMgAAADAAAAA3AAAALgAAADAAAAAAAAAA
          MgAAADAAAAA3AAAAMQAAAC4AAAAwAAAAMgAAADAAAAA3AAAAMwAAAC4AAAAwAAAAMgAAADAAAAA3
          AAAANQAAAC4AAAAwAAAAMgAAADAAAAA4AAAANAAAAC4AAAAwAAAAMgAAADAAAAA4AAAAOQAAAC4A
          AAAwAAAAMgAAADAAAAA5AAAAMgAAAC4AAAAwAAAAMgAAADAAAAA5AAAANgAAAC4AAAAwAAAAMgAA
          ADAAAAA5AAAAOQAAAC4AAAAwAAAAMgAAADEAAAAwAAAALgAAADAAAAAAAAAAMgAAADEAAAAwAAAA
          MAAAAC4AAAAwAAAAMgAAADEAAAAwAAAAMwAAAC4AAAAwAAAAMgAAADEAAAAwAAAANQAAAC4AAAAw
          AAAAMgAAADEAAAAwAAAANgAAAC4AAAAwAAAAMgAAADEAAAAwAAAANwAAAC4AAAAwAAAAMgAAADEA
          AAAxAAAAMAAAAC4AAAAwAAAAMgAAADEAAAAxAAAANAAAAC4AAAAwAAAAMgAAADEAAAAyAAAAMAAA
          AC4AAAAwAAAAMgAAADEAAAAyAAAAMgAAAC4AAAAwAAAAMgAAADEAAAAyAAAAMwAAAC4AAAAwAAAA
          MgAAADEAAAAyAAAANwAAAC4AAAAwAAAAMgAAADEAAAAzAAAAMAAAAC4AAAAwAAAAMgAAADEAAAAz
          AAAAMQAAAC4AAAAwAAAAMgAAADEAAAAzAAAAMgAAAC4AAAAwAAAAMgAAADEAAAAzAAAANQAAAC4A
          AAAwAAAAMgAAADEAAAAzAAAANwAAAC4AAAAwAAAAMgAAADEAAAAzAAAAOQAAAC4AAAAwAAAAMgAA
          ADEAAAA0AAAAMAAAAC4AAAAwAAAAMgAAADEAAAA0AAAAMQAAAC4AAAAwAAAAMgAAADEAAAA0AAAA
          MgAAAC4AAAAwAAAAMgAAADEAAAA0AAAAOQAAAC4AAAAwAAAAMgAAADEAAAA1AAAAMAAAAC4AAAAw
          AAAAMgAAADEAAAA1AAAAMQAAAC4AAAAwAAAAMgAAADEAAAA1AAAAMgAAAC4AAAAwAAAAMgAAADEA
          AAA1AAAAOAAAAC4AAAAwAAAAMgAAADEAAAA2AAAAMAAAAC4AAAAwAAAAMgAAADEAAAA2AAAAMQAA
          AC4AAAAwAAAAMgAAADEAAAA2AAAAMwAAAC4AAAAwAAAAMgAAADEAAAA2AAAANAAAAC4AAAAwAAAA
          MgAAADEAAAA2AAAANQAAAC4AAAAwAAAAMgAAADEAAAA2AAAANwAAAC4AAAAwAAAAMgAAADEAAAA3
          AAAAMwAAAC4AAAAwAAAAMgAAADEAAAA3AAAANgAAAC4AAAAwAAAAMgAAADEAAAA3AAAANwAAAC4A
          AAAwAAAAMgAAADEAAAA3AAAAOAAAAC4AAAAwAAAAMgAAADEAAAA4AAAAOAAAAC4AAAAwAAAAMgAA
          ADEAAAA5AAAAMAAAAC4AAAAwAAAAMgAAADEAAAA5AAAAMwAAAC4AAAAwAAAAMgAAADEAAAA5AAAA
          NAAAAC4AAAAwAAAAMgAAADEAAAA5AAAANwAAAC4AAAAwAAAAMgAAADIAAAAwAAAANwAAAC4AAAAw
          AAAAMgAAADIAAAAwAAAAOAAAAC4AAAAwAAAAMgAAADIAAAAxAAAALgAAADAAAAAAAAAAMgAAADIA
          AAAxAAAAOQAAAC4AAAAwAAAAMgAAADIAAAAyAAAAMQAAAC4AAAAwAAAAMgAAADIAAAAzAAAANgAA
          AC4AAAAwAAAAMgAAADIAAAA1AAAAMgAAAC4AAAAwAAAAMgAAADIAAAA1AAAANAAAAC4AAAAwAAAA
          MgAAADIAAAA1AAAAOQAAAC4AAAAwAAAAMgAAADIAAAA2AAAAMAAAAC4AAAAwAAAAMgAAADIAAAA2
          AAAANAAAAC4AAAAwAAAAMgAAADIAAAA2AAAANgAAAC4AAAAwAAAAMgAAADIAAAA2AAAAOQAAAC4A
          AAAwAAAAMgAAADIAAAA3AAAAMgAAAC4AAAAwAAAAMgAAADIAAAA3AAAAMwAAAC4AAAAwAAAAMgAA
          ADIAAAA3AAAANwAAAC4AAAAwAAAAMgAAADIAAAA3AAAAOAAAAC4AAAAwAAAAMgAAADIAAAA4AAAA
          MwAAAC4AAAAwAAAAMgAAADIAAAA4AAAAOQAAAC4AAAAwAAAAMgAAADIAAAA5AAAALgAAADAAAAAA
          AAAAMgAAADIAAAA5AAAAMgAAAC4AAAAwAAAAMgAAADIAAAA5AAAANgAAAC4AAAAwAAAAMgAAADMA
          AAAwAAAALgAAADAAAAAAAAAAMgAAADMAAAAwAAAAMQAAAC4AAAAwAAAAMgAAADMAAAAwAAAAMgAA
          AC4AAAAwAAAAMgAAADMAAAAwAAAAMwAAAC4AAAAwAAAAMgAAADMAAAAwAAAANAAAAC4AAAAwAAAA
          MgAAADMAAAAwAAAANQAAAC4AAAAwAAAAMgAAADMAAAAwAAAAOAAAAC4AAAAwAAAAMgAAADMAAAAx
          AAAAMQAAAC4AAAAwAAAAMgAAADMAAAAxAAAAMgAAAC4AAAAwAAAAMgAAADMAAAAxAAAAOAAAAC4A
          AAAwAAAAMgAAADMAAAAyAAAAMAAAAC4AAAAwAAAAMgAAADMAAAAyAAAAMQAAAC4AAAAwAAAAMgAA
          ADMAAAAyAAAAMgAAAC4AAAAwAAAAMgAAADMAAAAzAAAAMAAAAC4AAAAwAAAAMgAAADMAAAAzAAAA
          NAAAAC4AAAAwAAAAMgAAADMAAAA0AAAAMAAAAC4AAAAwAAAAMgAAADMAAAA0AAAAMgAAAC4AAAAw
          AAAAMgAAADMAAAA0AAAANQAAAC4AAAAwAAAAMgAAADMAAAA0AAAANgAAAC4AAAAwAAAAMgAAADMA
          AAA0AAAANwAAAC4AAAAwAAAAMgAAADMAAAA1AAAAMAAAAC4AAAAwAAAAMgAAADMAAAA1AAAAMQAA
          AC4AAAAwAAAAMgAAADMAAAA1AAAAMgAAAC4AAAAwAAAAMgAAADMAAAA1AAAAMwAAAC4AAAAwAAAA
          MgAAADMAAAA2AAAAMAAAAC4AAAAwAAAAMgAAADMAAAA2AAAAMwAAAC4AAAAwAAAAMgAAADMAAAA3
          AAAAMgAAAC4AAAAwAAAAMgAAADMAAAA3AAAAOAAAAC4AAAAwAAAAMgAAADMAAAA4AAAAMAAAAC4A
          AAAwAAAAMgAAADMAAAA4AAAAMgAAAC4AAAAwAAAAMgAAADMAAAA4AAAAOAAAAC4AAAAwAAAAMgAA
          ADMAAAA4AAAAOQAAAC4AAAAwAAAAMgAAADMAAAA5AAAAMAAAAC4AAAAwAAAAMgAAADMAAAA5AAAA
          MgAAAC4AAAAwAAAAMgAAADMAAAA5AAAAMwAAAC4AAAAwAAAAMgAAADMAAAA5AAAANQAAAC4AAAAw
          AAAAMgAAADMAAAA5AAAANwAAAC4AAAAwAAAAMgAAADMAAAA5AAAAOAAAAC4AAAAwAAAAMgAAADMA
          AAA5AAAAOQAAAC4AAAAwAAAAMgAAADQAAAAwAAAANQAAAC4AAAAwAAAAMgAAADQAAAAyAAAAMgAA
          AC4AAAAwAAAAMgAAADQAAAAyAAAANAAAAC4AAAAwAAAAMgAAADQAAAAyAAAANgAAAC4AAAAwAAAA
          MgAAADQAAAAyAAAANwAAAC4AAAAwAAAAMgAAADQAAAAyAAAAOQAAAC4AAAAwAAAAMgAAADQAAAAz
          AAAAMAAAAC4AAAAwAAAAMgAAADQAAAAzAAAAMwAAAC4AAAAwAAAAMgAAADQAAAAzAAAANwAAAC4A
          AAAwAAAAMgAAADQAAAA0AAAAMwAAAC4AAAAwAAAAMgAAADQAAAA0AAAAOQAAAC4AAAAwAAAAMgAA
          ADQAAAA1AAAANQAAAC4AAAAwAAAAMgAAADQAAAA1AAAANgAAAC4AAAAwAAAAMgAAADQAAAA4AAAA
          LgAAADAAAAAAAAAAMgAAADUAAAA0AAAALgAAADAAAAAAAAAAMgAAADUAAAA3AAAALgAAADAAAAAA
          AAAAMgAAADUAAAA4AAAALgAAADAAAAAAAAAAMgAAADcAAAAwAAAALgAAADAAAAAAAAAAMgAAADcA
          AAA1AAAALgAAADAAAAAAAAAAMgAAADkAAAAyAAAALgAAADAAAAAAAAAAMwAAADAAAAA3AAAALgAA
          ADAAAAAAAAAAMwAAADEAAAA1AAAALgAAADAAAAAAAAAAMwAAADIAAAA0AAAALgAAADAAAAAAAAAA
          MwAAADIAAAA3AAAAMAAAAC4AAAAwAAAAMwAAADIAAAA3AAAAMQAAAC4AAAAwAAAAMwAAADIAAAA4
          AAAALgAAADAAAAAAAAAAMwAAADMAAAAuAAAAMAAAAAAAAAAAAAAAMwAAADQAAAAxAAAANQAAAC4A
          AAAwAAAAMwAAADQAAAAyAAAALgAAADAAAAAAAAAAMwAAADQAAAA1AAAANAAAAC4AAAAwAAAAMwAA
          ADUAAAAzAAAALgAAADAAAAAAAAAAMwAAADUAAAA3AAAALgAAADAAAAAAAAAAMwAAADUAAAA4AAAA
          NgAAAC4AAAAwAAAAMwAAADYAAAAwAAAALgAAADAAAAAAAAAAMwAAADYAAAAxAAAANgAAAC4AAAAw
          AAAAMwAAADYAAAAxAAAANwAAAC4AAAAwAAAAMwAAADYAAAAyAAAAMQAAAC4AAAAwAAAAMwAAADYA
          AAAzAAAAMAAAAC4AAAAwAAAAMwAAADYAAAAzAAAAMQAAAC4AAAAwAAAAMwAAADYAAAAzAAAANwAA
          AC4AAAAwAAAAMwAAADYAAAAzAAAAOAAAAC4AAAAwAAAAMwAAADYAAAAzAAAAOQAAAC4AAAAwAAAA
          MwAAADYAAAA0AAAAMgAAAC4AAAAwAAAAMwAAADYAAAA0AAAANQAAAC4AAAAwAAAAMwAAADYAAAA1
          AAAAMAAAAC4AAAAwAAAAMwAAADYAAAA1AAAAMQAAAC4AAAAwAAAAMwAAADYAAAA1AAAAMgAAAC4A
          AAAwAAAAMwAAADYAAAA2AAAAMAAAAC4AAAAwAAAAMwAAADYAAAA2AAAAOQAAAC4AAAAwAAAAMwAA
          ADcAAAAwAAAAMQAAAC4AAAAwAAAAMwAAADcAAAAwAAAAMgAAAC4AAAAwAAAAMwAAADcAAAAwAAAA
          MwAAAC4AAAAwAAAAMwAAADcAAAAwAAAANAAAAC4AAAAwAAAAMwAAADcAAAAxAAAANAAAAC4AAAAw
          AAAAMwAAADcAAAAxAAAANQAAAC4AAAAwAAAAMwAAADcAAAAzAAAAMgAAAC4AAAAwAAAAMwAAADcA
          AAAzAAAAMwAAAC4AAAAwAAAAMwAAADcAAAA0AAAAMgAAAC4AAAAwAAAAMwAAADcAAAA0AAAANAAA
          AC4AAAAwAAAAMwAAADcAAAA2AAAAMgAAAC4AAAAwAAAAMwAAADcAAAA2AAAANAAAAC4AAAAwAAAA
          MwAAADgAAAAwAAAANAAAAC4AAAAwAAAAMwAAADkAAAAuAAAAMAAAAAAAAAAAAAAANAAAADEAAAA3
          AAAALgAAADAAAAAAAAAANAAAADEAAAA5AAAALgAAADAAAAAAAAAANAAAADMAAAAxAAAALgAAADAA
          AAAAAAAANAAAADMAAAAyAAAALgAAADAAAAAAAAAANAAAADQAAAAzAAAALgAAADAAAAAAAAAANAAA
          ADYAAAA1AAAALgAAADAAAAAAAAAANAAAADYAAAA3AAAALgAAADAAAAAAAAAANAAAADgAAAAyAAAA
          LgAAADAAAAAAAAAANAAAADgAAAA0AAAALgAAADAAAAAAAAAANAAAADgAAAA5AAAALgAAADAAAAAA
          AAAANAAAADkAAAAxAAAALgAAADAAAAAAAAAANAAAADkAAAA1AAAALgAAADAAAAAAAAAANAAAADkA
          AAA3AAAALgAAADAAAAAAAAAANAAAADkAAAA4AAAALgAAADAAAAAAAAAANQAAADAAAAA0AAAALgAA
          ADAAAAAAAAAANQAAADMAAAA2AAAALgAAADAAAAAAAAAANQAAADQAAAA2AAAALgAAADAAAAAAAAAA
          NQAAADQAAAA3AAAALgAAADAAAAAAAAAANQAAADUAAAAxAAAALgAAADAAAAAAAAAANQAAADUAAAA3
          AAAALgAAADAAAAAAAAAANQAAADUAAAA5AAAALgAAADAAAAAAAAAANQAAADYAAAA1AAAALgAAADAA
          AAAAAAAANQAAADcAAAAwAAAALgAAADAAAAAAAAAANQAAADcAAAA5AAAALgAAADAAAAAAAAAANQAA
          ADgAAAA0AAAALgAAADAAAAAAAAAANQAAADkAAAAyAAAALgAAADAAAAAAAAAANgAAADAAAAAuAAAA
          MAAAAAAAAAAAAAAANgAAADAAAAAxAAAALgAAADAAAAAAAAAANgAAADEAAAAuAAAAMAAAAAAAAAAA
          AAAANgAAADEAAAA3AAAALgAAADAAAAAAAAAANgAAADIAAAAuAAAAMAAAAAAAAAAAAAAANgAAADMA
          AAA0AAAALgAAADAAAAAAAAAANgAAADMAAAA2AAAALgAAADAAAAAAAAAANgAAADQAAAAzAAAALgAA
          ADAAAAAAAAAANgAAADYAAAAuAAAAMAAAAAAAAAAAAAAANgAAADYAAAA2AAAALgAAADAAAAAAAAAA
          NgAAADYAAAA3AAAALgAAADAAAAAAAAAANgAAADcAAAAxAAAALgAAADAAAAAAAAAANgAAADgAAAAx
          AAAALgAAADAAAAAAAAAANgAAADgAAAA5AAAALgAAADAAAAAAAAAANgAAADkAAAA0AAAALgAAADAA
          AAAAAAAANgAAADkAAAA1AAAALgAAADAAAAAAAAAANgAAADkAAAA2AAAALgAAADAAAAAAAAAANwAA
          AC4AAAAwAAAAAAAAAAAAAAAAAAAANwAAADAAAAA5AAAALgAAADAAAAAAAAAANwAAADEAAAAyAAAA
          LgAAADAAAAAAAAAANwAAADIAAAA4AAAALgAAADAAAAAAAAAANwAAADMAAAAuAAAAMAAAAAAAAAAA
          AAAANwAAADMAAAA2AAAALgAAADAAAAAAAAAANwAAADQAAAAyAAAALgAAADAAAAAAAAAANwAAADQA
          AAAzAAAALgAAADAAAAAAAAAANwAAADUAAAA5AAAALgAAADAAAAAAAAAANwAAADcAAAA3AAAALgAA
          ADAAAAAAAAAANwAAADgAAAA5AAAALgAAADAAAAAAAAAANwAAADkAAAAuAAAAMAAAAAAAAAAAAAAA
          NwAAADkAAAAzAAAALgAAADAAAAAAAAAANwAAADkAAAA1AAAALgAAADAAAAAAAAAANwAAADkAAAA3
          AAAALgAAADAAAAAAAAAAOAAAAC4AAAAwAAAAAAAAAAAAAAAAAAAAOAAAADEAAAAuAAAAMAAAAAAA
          AAAAAAAAOAAAADEAAAAzAAAALgAAADAAAAAAAAAAOAAAADIAAAAuAAAAMAAAAAAAAAAAAAAAOAAA
          ADMAAAAxAAAALgAAADAAAAAAAAAAOAAAADMAAAA3AAAALgAAADAAAAAAAAAAOAAAADQAAAAuAAAA
          MAAAAAAAAAAAAAAAOAAAADQAAAA0AAAALgAAADAAAAAAAAAAOAAAADQAAAA1AAAALgAAADAAAAAA
          AAAAOAAAADQAAAA3AAAALgAAADAAAAAAAAAAOAAAADUAAAA3AAAALgAAADAAAAAAAAAAOAAAADUA
          AAA4AAAALgAAADAAAAAAAAAAOAAAADYAAAA1AAAALgAAADAAAAAAAAAAOAAAADcAAAA5AAAALgAA
          ADAAAAAAAAAAOAAAADgAAAAuAAAAMAAAAAAAAAAAAAAAOAAAADgAAAA4AAAALgAAADAAAAAAAAAA
          OQAAAC4AAAAwAAAAAAAAAAAAAAAAAAAAOQAAADAAAAAxAAAALgAAADAAAAAAAAAAOQAAADEAAAA1
          AAAALgAAADAAAAAAAAAAOQAAADIAAAA2AAAALgAAADAAAAAAAAAAOQAAADIAAAA4AAAALgAAADAA
          AAAAAAAAOQAAADMAAAAuAAAAMAAAAAAAAAAAAAAAOQAAADQAAAA1AAAALgAAADAAAAAAAAAAOQAA
          ADUAAAA0AAAALgAAADAAAAAAAAAAOQAAADgAAAAyAAAALgAAADAAAAAAAAAAOQAAADgAAAA0AAAA
          LgAAADAAAAAAAAAAOQAAADgAAAA2AAAALgAAADAAAAAAAAAAOQAAADkAAAAyAAAALgAAADAAAAAA
          AAAAOQAAADkAAAA0AAAALgAAADAAAAAAAAAA
      warn: true
    vehicle_type: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: true
      classes_: &id013
        Compact: 1
        Compact HEV: 2
        Compact SUV: 3
        Electric: 4
        Fullsize SUV: 5
        Imported: 6
        Micro SUV: 7
        Microcar: 8
        Midsize: 9
        Midsize HEV: 10
        Midsize SUV: 11
        Passenger Van: 12
        Subcompact: 13
        Subcompact SUV: 14
        Subcompact SUV HEV: 15
        Upper Midsize: 16
        nan: 0
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 17
        - !!python/object/apply:numpy.dtype
          args:
          - U18
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 72
          - 4
          - 8
        - false
        - !!binary |
          bgAAAGEAAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAQwAAAG8AAABtAAAAcAAAAGEAAABjAAAAdAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQwAAAG8AAABtAAAAcAAAAGEAAABjAAAAdAAA
          ACAAAABIAAAARQAAAFYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQwAAAG8AAABtAAAA
          cAAAAGEAAABjAAAAdAAAACAAAABTAAAAVQAAAFYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAARQAAAGwAAABlAAAAYwAAAHQAAAByAAAAaQAAAGMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAARgAAAHUAAABsAAAAbAAAAHMAAABpAAAAegAAAGUAAAAgAAAAUwAA
          AFUAAABWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASQAAAG0AAABwAAAAbwAAAHIAAAB0AAAA
          ZQAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAGkAAABj
          AAAAcgAAAG8AAAAgAAAAUwAAAFUAAABWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAATQAAAGkAAABjAAAAcgAAAG8AAABjAAAAYQAAAHIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAGkAAABkAAAAcwAAAGkAAAB6AAAAZQAAAAAAAAAAAAAA
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAGkAAABkAAAAcwAAAGkAAAB6
          AAAAZQAAACAAAABIAAAARQAAAFYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAGkA
          AABkAAAAcwAAAGkAAAB6AAAAZQAAACAAAABTAAAAVQAAAFYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
          AAAAAAAAAAAAUAAAAGEAAABzAAAAcwAAAGUAAABuAAAAZwAAAGUAAAByAAAAIAAAAFYAAABhAAAA
          bgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUwAAAHUAAABiAAAAYwAAAG8AAABtAAAAcAAAAGEAAABj
          AAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUwAAAHUAAABiAAAAYwAAAG8A
          AABtAAAAcAAAAGEAAABjAAAAdAAAACAAAABTAAAAVQAAAFYAAAAAAAAAAAAAAAAAAAAAAAAAUwAA
          AHUAAABiAAAAYwAAAG8AAABtAAAAcAAAAGEAAABjAAAAdAAAACAAAABTAAAAVQAAAFYAAAAgAAAA
          SAAAAEUAAABWAAAAVQAAAHAAAABwAAAAZQAAAHIAAAAgAAAATQAAAGkAAABkAAAAcwAAAGkAAAB6
          AAAAZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
      warn: true
    week: !!python/object:pytorch_forecasting.data.encoders.NaNLabelEncoder
      add_nan: false
      classes_: &id014
        '1': 0
        '10': 1
        '11': 2
        '12': 3
        '13': 4
        '14': 5
        '15': 6
        '16': 7
        '17': 8
        '18': 9
        '19': 10
        '2': 11
        '20': 12
        '21': 13
        '22': 14
        '23': 15
        '24': 16
        '25': 17
        '26': 18
        '27': 19
        '28': 20
        '29': 21
        '3': 22
        '30': 23
        '31': 24
        '32': 25
        '33': 26
        '34': 27
        '35': 28
        '36': 29
        '37': 30
        '38': 31
        '39': 32
        '4': 33
        '40': 34
        '41': 35
        '42': 36
        '43': 37
        '44': 38
        '45': 39
        '46': 40
        '47': 41
        '48': 42
        '49': 43
        '5': 44
        '50': 45
        '51': 46
        '52': 47
        '6': 48
        '7': 49
        '8': 50
        '9': 51
      classes_vector_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 52
        - !!python/object/apply:numpy.dtype
          args:
          - U2
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - 8
          - 4
          - 8
        - false
        - !!binary |
          MQAAAAAAAAAxAAAAMAAAADEAAAAxAAAAMQAAADIAAAAxAAAAMwAAADEAAAA0AAAAMQAAADUAAAAx
          AAAANgAAADEAAAA3AAAAMQAAADgAAAAxAAAAOQAAADIAAAAAAAAAMgAAADAAAAAyAAAAMQAAADIA
          AAAyAAAAMgAAADMAAAAyAAAANAAAADIAAAA1AAAAMgAAADYAAAAyAAAANwAAADIAAAA4AAAAMgAA
          ADkAAAAzAAAAAAAAADMAAAAwAAAAMwAAADEAAAAzAAAAMgAAADMAAAAzAAAAMwAAADQAAAAzAAAA
          NQAAADMAAAA2AAAAMwAAADcAAAAzAAAAOAAAADMAAAA5AAAANAAAAAAAAAA0AAAAMAAAADQAAAAx
          AAAANAAAADIAAAA0AAAAMwAAADQAAAA0AAAANAAAADUAAAA0AAAANgAAADQAAAA3AAAANAAAADgA
          AAA0AAAAOQAAADUAAAAAAAAANQAAADAAAAA1AAAAMQAAADUAAAAyAAAANgAAAAAAAAA3AAAAAAAA
          ADgAAAAAAAAAOQAAAAAAAAA=
      warn: true
  constant_fill_strategy: null
  group_ids:
  - spot_id
  - vehicle_type
  lags: null
  max_encoder_length: 60
  max_prediction_length: 20
  min_encoder_length: 60
  min_prediction_idx: !!python/object/apply:numpy._core.multiarray.scalar
  - &id002 !!python/object/apply:numpy.dtype
    args:
    - i8
    - false
    - true
    state: !!python/tuple
    - 3
    - <
    - null
    - null
    - null
    - -1
    - -1
    - 0
  - !!binary |
    AAAAAAAAAAA=
  min_prediction_length: 20
  predict_mode: false
  randomize_length: null
  scalers:
    RH: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - &id004 !!python/object/apply:numpy.dtype
          args:
          - O8
          - false
          - true
          state: !!python/tuple
          - 3
          - '|'
          - null
          - null
          - null
          - -1
          - -1
          - 63
        - false
        - - RH
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - &id003 !!python/object/apply:numpy.dtype
          args:
          - f8
          - false
          - true
          state: !!python/tuple
          - 3
          - <
          - null
          - null
          - null
          - -1
          - -1
          - 0
        - false
        - !!binary |
          L3+SRkDeUEA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          0E1gGMdXLEA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          FMsTMo0aaUA=
      with_mean: true
      with_std: true
    W: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - W
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          39lZiKwMAEA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          9pckt/nf6z8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          tvwSDRVI6D8=
      with_mean: true
      with_std: true
    avg_standard_rate_inv: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - avg_standard_rate_inv
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          Tge0ig6QxkA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          iAVDpeAtqEA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          zGHevRJFYkE=
      with_mean: true
      with_std: true
    avg_vehicle_age_inv: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - avg_vehicle_age_inv
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          Cnw7ijud+z8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          5QNaQv0l9D8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          ga3cWFNf+T8=
      with_mean: true
      with_std: true
    coupon_count: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - coupon_count
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          PFRUmgmJ7z8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          sxdGI/t88T8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          0ZP97mUd8z8=
      with_mean: true
      with_std: true
    coupon_count_lag7: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - coupon_count_lag7
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          bNrCRWla6z8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          doWO9ga18T8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          6Dt8+a6Y8z8=
      with_mean: true
      with_std: true
    coupon_flag_prev1: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - coupon_flag_prev1
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          nAwM7f0u4j8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          WByztlqz3z8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          eiLYAW1nzz8=
      with_mean: true
      with_std: true
    coupon_per_vehicle: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - coupon_per_vehicle
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          VuU7LnutwkA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          0MSgtgpR0EA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          1tHB6a+jsEE=
      with_mean: true
      with_std: true
    day_to_offday: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - day_to_offday
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          9AKE0sm18j8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          sxB3TENh8D8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          41YI2tXE8D8=
      with_mean: true
      with_std: true
    encoder_length: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - encoder_length
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAAAAA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAA8D8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAAAAA=
      with_mean: true
      with_std: true
    has_inventory: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - has_inventory
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAA8D8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAA8D8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAAAAA=
      with_mean: true
      with_std: true
    inventory_est: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - inventory_est
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          vPZwiolwAUA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          s66l2syiAkA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          Ujd/asW0FUA=
      with_mean: true
      with_std: true
    lag_1: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - lag_1
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          3dsZcNvJ8kA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          auOrgILF8kA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          YrdLw+sF9kE=
      with_mean: true
      with_std: true
    lag_28: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - lag_28
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          vS1cBjL68EA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          twX07wb88kA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          lpVudpGG9kE=
      with_mean: true
      with_std: true
    lag_7: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - lag_7
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          7Er6P/ME8kA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          ladH4D/68kA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          wfrAxVmC9kE=
      with_mean: true
      with_std: true
    offday_run: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - offday_run
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          f/qeHfNU5z8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          KBe+6W768T8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          1UC9fXsz9D8=
      with_mean: true
      with_std: true
    rain_mm_lag1: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - rain_mm_lag1
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          OajFsdQSEUA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          fBo5CyrWLUA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          PNnkhsXRa0A=
      with_mean: true
      with_std: true
    region_rev_per_vehicle: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - region_rev_per_vehicle
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          17p89JoO2UA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          E8Cy+QAkyUA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          6iVZCGrAo0E=
      with_mean: true
      with_std: true
    region_total_rev: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - region_total_rev
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          Y6fbPO3BbEE=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          3gbO6ciUaUE=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          tg2ytC1z5EI=
      with_mean: true
      with_std: true
    region_vehicle_count: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - region_vehicle_count
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          J/83NE70iEA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          xnbV1XVrh0A=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          hccaQeIjIUE=
      with_mean: true
      with_std: true
    region_vehicle_mean_rev: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - region_vehicle_mean_rev
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          jOC8rF1o9T8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          SnvIkOkv6z8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          7mMU4SEZ5z8=
      with_mean: true
      with_std: true
    relative_time_idx: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - relative_time_idx
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAAAAA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAA8D8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AAAAAAAAAAA=
      with_mean: true
      with_std: true
    rev_per_vehicle_center: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - rev_per_vehicle_center
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          xWUHWTU750A=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          qk5EMJyQyEA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          pjMTyXfbokE=
      with_mean: true
      with_std: true
    rev_per_vehicle_scale: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - rev_per_vehicle_scale
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          BQWg9Jeu3EA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          6+GL+uCst0A=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          zi/cYCmEgUE=
      with_mean: true
      with_std: true
    roll_mean_7: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - roll_mean_7
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          lO4O4L3l1kA=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          TQyupLGM20A=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          w9AgXNa3x0E=
      with_mean: true
      with_std: true
    roll_std_7: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - roll_std_7
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          QnJ7Y/eL40A=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          QmEU+oRh4kA=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          hT9Xk70d1UE=
      with_mean: true
      with_std: true
    utilization_7: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - utilization_7
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          QChbr4PD8j8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          R2G8ILsq8D8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          BC1xYOhV8D8=
      with_mean: true
      with_std: true
    vehicle_count: !!python/object:sklearn.preprocessing._data.StandardScaler
      _sklearn_version: 1.6.1
      copy: true
      feature_names_in_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id004
        - false
        - - vehicle_count
      mean_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          AJIDorRq9z8=
      n_features_in_: 1
      n_samples_seen_: !!python/object/apply:numpy._core.multiarray.scalar
      - *id002
      - !!binary |
        ZOwGAAAAAAA=
      scale_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          4qMyYobo7D8=
      var_: !!python/object/apply:numpy._core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 1
        - *id003
        - false
        - !!binary |
          qdScyoQd6j8=
      with_mean: true
      with_std: true
  static_categoricals:
  - spot_id
  - vehicle_type
  - region_code
  static_reals: null
  target: rev_per_vehicle
  target_normalizer: &id015 !!python/object:pytorch_forecasting.data.encoders.GroupNormalizer
    _groups:
    - spot_id
    - vehicle_type
    _method_kwargs: {}
    center: true
    groups:
    - spot_id
    - vehicle_type
    method: standard
    method_kwargs: {}
    missing_:
      center: 47726.400290774356
      scale: 29683.005047353534
    norm_: !!python/object:pandas.core.frame.DataFrame
      _flags:
        allows_duplicate_labels: true
      _metadata: []
      _mgr: !!python/object/apply:pandas.core.internals.managers.BlockManager
      - !!python/tuple
        - !!python/object/apply:pandas._libs.internals._unpickle_block
          - !!python/object/apply:numpy._core.multiarray._reconstruct
            args:
            - *id001
            - !!python/tuple
              - 0
            - !!binary |
              Yg==
            state: !!python/tuple
            - 1
            - !!python/tuple
              - 2
              - 990
            - *id003
            - false
            - !!binary |
              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
              N0WkAWxG3ECw1TTlKBDlQKuxaSr3JdlAI6Eo18yB2kDDLz+KZQLfQNqUG9BijttAA3FEFRBO2EA7
              la9bPcXgQBRI+eHR29dAYT44cClx2UDaIiipL1vdQM85Iew6QOZAn3jdu/3d4ED0mAzreGzeQJS9
              Gkf5FeRAVA1PDgjy1kBZlcnlU2XbQMki5YcbbNdAUYs9kN1y3UCL/y0k03/bQKLpOyVgBttAaam/
              mys04ECgzG8lfL/WQNpUiTekj+JATndxhOof2EDwj/hL8FLeQJqbIe0P0eBAQuySXAbB5EAHSNti
              lUDcQFyuGC+jqd9AVeGewgbu3UB0X58B9CDcQPJV+JorE+BA3XzsurU530DUzhUs3efgQKRRNJA4
              8uFAcmxwiCys5EB8LrmZl17WQP2/kYRVvOBAviW8dDaT1UAzi03H92vYQPw1sNY9vtdA9iCERsCz
              30AulwbgAxXhQC6xus3t+ttAkFU9G5vq2EBRCL7lxP7XQNZm5gwS59tA7wZe6GPi2kApjPu2U0Xa
              QH63sGSAyeBAngcWRuGf20BO1HNT7s7jQIwu5B9lj9tAJ/LBOTJa30ADuJRU1DjZQM/OQSrlndRA
              HWVUVUjh3ED5dXyAMjreQMFIFVnmvudAo0eoR+RR3EAezVPCYb/eQIMSR6VK4tVA/tGP7EXK1kAX
              GKwkv2vdQKaqdlDBpthA4yJVKFFW1ECbUcslbu7iQFGPOjK51eNAX5eSxEXY4UDY9xOqse3gQFf4
              bM4O8dJA2zUQ2HLy2kBHywApJsLaQLreb/rLauBAH2cuF7AC20Dy1a1V6f/cQDXK8l8vHuJABDDS
              nY0X30Dnj8TAHCzgQIKFf8CaW+BA2vW28XBI0UCK3xKVerjfQNWiv9vgRuBAmOgX5AaB3UABaUlI
              Nw/fQNNCGocK99xAe5r7bThE20AV8qkdt47YQL8RE/npo9tAEk3gAlUX3UAgbI5ve1fUQF4gbDLb
              tOBAnVi9UCfh20C5sgiX2PzgQOyuysMWtd5AuyNGw1zt20DV0xh9CjHTQHoL5qGE0dJAPC9k5Qnr
              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
          - !!python/object/apply:builtins.slice
            - 0
            - 2
            - 1
          - 2
      - - !!python/object/apply:pandas.core.indexes.base._new_Index
          - &id005 !!python/name:pandas.core.indexes.base.Index ''
          - data: !!python/object/apply:numpy._core.multiarray._reconstruct
              args:
              - *id001
              - !!python/tuple
                - 0
              - !!binary |
                Yg==
              state: !!python/tuple
              - 1
              - !!python/tuple
                - 2
              - *id004
              - false
              - - center
                - scale
            name: null
        - !!python/object/apply:pandas.core.indexes.base._new_Index
          - !!python/name:pandas.core.indexes.multi.MultiIndex ''
          - codes:
            - !!python/object/apply:numpy._core.multiarray._reconstruct
              args:
              - *id001
              - !!python/tuple
                - 0
              - !!binary |
                Yg==
              state: !!python/tuple
              - 1
              - !!python/tuple
                - 990
              - !!python/object/apply:numpy.dtype
                args:
                - i2
                - false
                - true
                state: !!python/tuple
                - 3
                - <
                - null
                - null
                - null
                - -1
                - -1
                - 0
              - false
              - !!binary |
                AAABAAIAAwADAAQABQAGAAcACAAJAAkACQAJAAkACQAJAAkACQAJAAoACgAKAAoACwAMAAwADQAN
                AA0ADQANAA0ADQAOAA8ADwAPAA8ADwAPABAAEQARABEAEQASABMAEwATABMAEwAUABUAFgAXABcA
                FwAXABcAFwAXABcAFwAYABgAGAAZABoAGwAcAB0AHgAfACAAIQAhACEAIgAjACQAJAAkACUAJgAm
                ACcAKAApACkAKQApACkAKQApACkAKgArACsALAAtAC0ALQAuAC4ALgAuAC4ALwAwADAAMAAxADEA
                MgAzADQANAA0ADUANgA3ADcAOAA4ADkAOgA7ADsAPAA9AD0APQA9AD0APQA+AD8APwBAAEAAQABB
                AEEAQgBDAEMARABFAEYARwBHAEcASABJAEoASwBMAEwATABMAEwATABNAE0ATgBOAE4ATgBOAE4A
                TgBOAE8AUABRAFEAUQBRAFEAUQBRAFIAUgBTAFQAVQBVAFYAVwBXAFcAVwBXAFcAWABZAFkAWgBb
                AFwAXABcAFwAXABcAFwAXABcAF0AXQBdAF4AXwBfAF8AXwBfAF8AYABhAGEAYgBiAGIAYgBjAGMA
                YwBkAGQAZABkAGQAZABkAGQAZQBmAGYAZgBmAGYAZgBnAGcAZwBnAGcAaABoAGgAaABoAGgAaABo
                AGkAaQBpAGoAagBqAGoAagBqAGoAagBqAGsAawBrAGsAbABtAG0AbQBuAG8AcABwAHAAcQBxAHIA
                cgByAHMAdAB1AHYAdwB3AHgAeQB5AHoAegB6AHoAegB7AHwAfQB+AH4AfgB+AH4AfwB/AIAAgACA
                AIAAgACAAIAAgQCCAIIAgwCEAIUAhQCFAIUAhQCFAIUAhgCGAIYAhgCGAIYAhwCHAIcAhwCHAIgA
                iACIAIkAigCKAIoAigCKAIoAiwCLAIwAjQCOAI4AjgCOAI8AkACQAJAAkQCRAJEAkQCSAJIAkwCU
                AJQAlQCVAJYAlgCWAJcAmACYAJgAmACYAJgAmACYAJgAmACYAJgAmQCaAJoAmgCaAJoAmwCbAJwA
                nACcAJwAnQCeAJ8AoAChAKEAoQChAKIAowCjAKQApACkAKQApACkAKQApACkAKUApQClAKUApQCm
                AKYApgCmAKcAqACpAKoAqgCqAKoAqwCrAKsAqwCrAKsAqwCrAKwArACtAK4ArgCvAK8ArwCwALAA
                sQCyALIAsgCzALQAtAC0ALUAtQC1ALYAtwC4ALgAuQC5ALoAuwC8AL0AvgC+AL4AvwDAAMAAwQDC
                AMMAwwDEAMUAxQDFAMYAxgDHAMgAyADJAMoAygDKAMsAywDLAMwAzADNAM4AzgDOAM4AzgDOAM8A
                0ADQANAA0QDRANIA0gDSANIA0wDUANQA1QDWANYA1gDXANcA1wDXANgA2ADZANkA2QDaANoA2gDa
                ANoA2gDaANoA2wDbANwA3ADdAN0A3QDeAN8A4ADgAOAA4QDhAOEA4QDhAOIA4gDjAOMA4wDjAOQA
                5QDmAOYA5gDmAOYA5gDmAOYA5gDnAOcA5wDoAOkA6gDrAOsA6wDrAOsA7ADsAOwA7ADsAOwA7QDu
                AO8A8ADwAPAA8ADxAPIA8wD0APQA9AD0APQA9AD0APQA9AD1APUA9QD2APcA9wD3APcA+AD4APkA
                +QD6APoA+gD6APoA+gD7APwA/QD9AP0A/gD/AP8A/wAAAQABAAEAAQEBAgECAQMBBAEFAQYBBgEG
                AQYBBgEGAQYBBwEHAQgBCQEJAQoBCwELAQwBDQENAQ4BDgEOAQ8BEAERARIBEwEUARUBFgEWARYB
                FwEYARgBGAEZARoBGwEcAR0BHgEfASABIQEiASIBIwEkASUBJQEmASYBJwEnAScBKAEoASkBKQEq
                ASsBLAEtAS0BLgEvATABMQEyATIBMgEzATMBNAE1ATYBNgE3ATcBNwE3ATgBOQE5ATkBOQE5AToB
                OwE7ATwBPQE9AT0BPgE+AT4BPwFAAUABQQFBAUIBQgFDAUQBRQFFAUYBRwFHAUcBSAFIAUgBSQFK
                AUoBSwFLAUsBSwFLAUsBTAFNAU4BTwFQAVABUQFSAVMBUwFTAVQBVAFVAVYBVgFWAVYBVgFXAVgB
                WAFZAVkBWgFbAVwBXQFdAV0BXgFfAWABYQFiAWIBYwFjAWQBZQFmAWcBaAFpAWoBagFrAWwBbAFt
                AW4BbgFvAW8BcAFxAXIBcwFzAXQBdAF1AXYBdwF4AXkBegF7AXwBfAF8AX0BfgF/AX8BfwF/AYAB
                gQGCAYMBgwGEAYQBhQGFAYYBhgGGAYYBhgGGAYYBhwGIAYkBigGLAYsBiwGLAYwBjQGNAY4BjgGP
                AY8BjwGQAZABkQGSAZMBlAGVAZYBlwGYAZgBmQGaAZoBmgGbAZwBnAGdAZ0BnQGeAZ8BnwGfAaAB
                oQGiAaIBogGjAaQBpQGlAaYBpwGnAagBqQGqAaoBqwGsAawBrAGtAa4BrwGwAbABsQGxAbIBswG0
                AbQBtAG1AbUBtgG3AbgBuAG5AbkBugG6AboBuwG7AbsBvAG9Ab4BvwG/AcABwAHBAcIBwgHDAcQB
                xQHGAcYBxwHIAcgByQHKAcsBzAHMAc0BzgHPAdAB0AHRAdIB0gHSAdMB
            - !!python/object/apply:numpy._core.multiarray._reconstruct
              args:
              - *id001
              - !!python/tuple
                - 0
              - !!binary |
                Yg==
              state: !!python/tuple
              - 1
              - !!python/tuple
                - 990
              - !!python/object/apply:numpy.dtype
                args:
                - i1
                - false
                - true
                state: !!python/tuple
                - 3
                - '|'
                - null
                - null
                - null
                - -1
                - -1
                - 0
              - false
              - !!binary |
                Bw0AAAgAAAAADQABAwQHCAsNDg8ABQcNDQANAAMICw0ODwAAAwQICw8NAAcNDgAAAwcIDQAABwAC
                AwcICQsNDgAHCAAHAAAHAAAAAAcNBwAADQ4HAA0AAAACAwcICQ0OAAAHAAANDgABAgMNBQANDwAI
                AAAABw0AAAAHAA0ABgAHAAACAwgNDgcADQAIDQgNAAANBwAAAAcMAAAHAAAHCAkNDgADAAECAwcI
                DQ8AAAABAgcIDQ4ADwAAAAcAAAEHCAwNDQAOAA0AAgMFBwgLDQ8ACA0AAAIDCA0PAAAOAAgNDwAI
                DgACAwgJCw0OAAABAwgNDwACBwgNAAIDBwgJDQ4ABwgAAgMHCAkLDQ4ACA0OAAAJDQAHAAMIAAgA
                AwgNAAAAAA4AAA0AAQcIDQAAAAADCA0PCA8AAgMIDQ4PDggPCAAAAwcICQ0OAAIHCQ0OAAcJDQ4A
                CQ4AAAMICQ0OAA0AAAAHCA0MAAcIAAIIDQANAAAOAA4HDQ4NAAECAwYHCAoLDQ4PBQABBwkNAA0A
                AgkNBwcHAAADCA0NAA0AAgMEBgcIDQ8AAQgNDgAJDQ4NBQAACA0OAAECCAkNDg8ACAAACAAHCAAH
                BwAIDQ0ACA4ACA0IAAAIAAgICAAAAAcIAAAHAAAABwAACA0ADgcABwAACQ4ACQ4ACQcABwgJDQ4H
                AAgNAAkAAQgNAAcIAAAIDgABCAwIDwADCAADBwgKDQ4PAAgABwAIDQAAAAcIAAIICQ0HDQAJDA0A
                AAABAgMHCAkNDgABCAANAAAICQ0OAAcICQ0OAAAAAAgJDQAAAAABAgMHCAoLDwAIDQAAAQgPAAgA
                CAACCAsNDgcAAAMIAAAIDQAIDQ4HAA0HDQcAAQMECAsPAAgIAAgIAAIAAA0ACQ0JCAAAAAcAAAcN
                BwAIDQAAAAAAAAAAAAANAAAACAAIAAcIAAgACAAHDgAHCAAAAAAIDgkOAAAABwAFCA0AAAMIDQ4A
                AA0AAAkOAAgNDQAIAAgBCAAAAAgIAAgNAAgOAAAHAAcICQ0OAAcABwAIAAcABw0ABwAAAwgNDwcA
                DQAIAAAAAAcNAAADDQADAA0AAAAAAA0ACAAACAcADgAHDQAAAAIAAgAAAAAAAAAABw0HDQADCA8A
                DQAABwAHAA0AAwQHCAoPDQcABwAHCA0NAAcABwAIDQAHAAAHAAAABwAHBwAHDQcABwAJDQcABw0A
                BwAHDQAHAAgABw0AAAANAAAHDQcAAAAHAAgAAAAHCAAHBwAABwANAAUNAAcNAAANBw0ADgAABwAA
                AAAIBwANAA0AAAcAAAAADQAACA0A
            levels:
            - !!python/object/apply:pandas.core.indexes.base._new_Index
              - *id005
              - data: !!python/object/apply:numpy._core.multiarray._reconstruct
                  args:
                  - *id001
                  - !!python/tuple
                    - 0
                  - !!binary |
                    Yg==
                  state: !!python/tuple
                  - 1
                  - !!python/tuple
                    - 468
                  - *id002
                  - false
                  - !!binary |
                    AQAAAAAAAAACAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAI
                    AAAAAAAAAAkAAAAAAAAACgAAAAAAAAALAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAOAAAAAAAAAA8A
                    AAAAAAAAEAAAAAAAAAARAAAAAAAAABIAAAAAAAAAEwAAAAAAAAAUAAAAAAAAABUAAAAAAAAAFgAA
                    AAAAAAAXAAAAAAAAABgAAAAAAAAAGQAAAAAAAAAaAAAAAAAAABsAAAAAAAAAHAAAAAAAAAAdAAAA
                    AAAAAB4AAAAAAAAAHwAAAAAAAAAgAAAAAAAAACEAAAAAAAAAIgAAAAAAAAAjAAAAAAAAACQAAAAA
                    AAAAJQAAAAAAAAAmAAAAAAAAACcAAAAAAAAAKAAAAAAAAAApAAAAAAAAACoAAAAAAAAAKwAAAAAA
                    AAAsAAAAAAAAAC0AAAAAAAAALgAAAAAAAAAvAAAAAAAAADAAAAAAAAAAMQAAAAAAAAAyAAAAAAAA
                    ADMAAAAAAAAANAAAAAAAAAA1AAAAAAAAADYAAAAAAAAANwAAAAAAAAA4AAAAAAAAADkAAAAAAAAA
                    OgAAAAAAAAA7AAAAAAAAADwAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAD8AAAAAAAAAQAAAAAAAAABB
                    AAAAAAAAAEIAAAAAAAAAQwAAAAAAAABEAAAAAAAAAEUAAAAAAAAARgAAAAAAAABHAAAAAAAAAEgA
                    AAAAAAAASQAAAAAAAABKAAAAAAAAAEsAAAAAAAAATAAAAAAAAABNAAAAAAAAAE4AAAAAAAAATwAA
                    AAAAAABQAAAAAAAAAFEAAAAAAAAAUgAAAAAAAABTAAAAAAAAAFQAAAAAAAAAVQAAAAAAAABWAAAA
                    AAAAAFcAAAAAAAAAWAAAAAAAAABZAAAAAAAAAFoAAAAAAAAAWwAAAAAAAABcAAAAAAAAAF0AAAAA
                    AAAAXgAAAAAAAABfAAAAAAAAAGAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAGMAAAAAAAAAZAAAAAAA
                    AABlAAAAAAAAAGYAAAAAAAAAZwAAAAAAAABoAAAAAAAAAGkAAAAAAAAAagAAAAAAAABrAAAAAAAA
                    AGwAAAAAAAAAbQAAAAAAAABuAAAAAAAAAG8AAAAAAAAAcAAAAAAAAABxAAAAAAAAAHIAAAAAAAAA
                    cwAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAeQAAAAAAAAB6
                    AAAAAAAAAHsAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAH4AAAAAAAAAfwAAAAAAAACAAAAAAAAAAIEA
                    AAAAAAAAggAAAAAAAACDAAAAAAAAAIQAAAAAAAAAhQAAAAAAAACGAAAAAAAAAIcAAAAAAAAAiAAA
                    AAAAAACJAAAAAAAAAIoAAAAAAAAAiwAAAAAAAACMAAAAAAAAAI0AAAAAAAAAjgAAAAAAAACPAAAA
                    AAAAAJAAAAAAAAAAkQAAAAAAAACSAAAAAAAAAJMAAAAAAAAAlAAAAAAAAACVAAAAAAAAAJYAAAAA
                    AAAAlwAAAAAAAACYAAAAAAAAAJkAAAAAAAAAmgAAAAAAAACbAAAAAAAAAJwAAAAAAAAAnQAAAAAA
                    AACeAAAAAAAAAJ8AAAAAAAAAoAAAAAAAAAChAAAAAAAAAKIAAAAAAAAAowAAAAAAAACkAAAAAAAA
                    AKUAAAAAAAAApgAAAAAAAACnAAAAAAAAAKgAAAAAAAAAqQAAAAAAAACqAAAAAAAAAKsAAAAAAAAA
                    rAAAAAAAAACtAAAAAAAAAK4AAAAAAAAArwAAAAAAAACwAAAAAAAAALEAAAAAAAAAsgAAAAAAAACz
                    AAAAAAAAALQAAAAAAAAAtQAAAAAAAAC2AAAAAAAAALcAAAAAAAAAuAAAAAAAAAC5AAAAAAAAALoA
                    AAAAAAAAuwAAAAAAAAC8AAAAAAAAAL0AAAAAAAAAvgAAAAAAAAC/AAAAAAAAAMAAAAAAAAAAwQAA
                    AAAAAADCAAAAAAAAAMMAAAAAAAAAxAAAAAAAAADFAAAAAAAAAMYAAAAAAAAAxwAAAAAAAADIAAAA
                    AAAAAMkAAAAAAAAAygAAAAAAAADLAAAAAAAAAMwAAAAAAAAAzQAAAAAAAADOAAAAAAAAAM8AAAAA
                    AAAA0AAAAAAAAADRAAAAAAAAANIAAAAAAAAA0wAAAAAAAADUAAAAAAAAANUAAAAAAAAA1gAAAAAA
                    AADXAAAAAAAAANgAAAAAAAAA2QAAAAAAAADaAAAAAAAAANsAAAAAAAAA3AAAAAAAAADdAAAAAAAA
                    AN4AAAAAAAAA3wAAAAAAAADgAAAAAAAAAOEAAAAAAAAA4gAAAAAAAADjAAAAAAAAAOQAAAAAAAAA
                    5QAAAAAAAADmAAAAAAAAAOcAAAAAAAAA6AAAAAAAAADpAAAAAAAAAOoAAAAAAAAA6wAAAAAAAADs
                    AAAAAAAAAO0AAAAAAAAA7gAAAAAAAADvAAAAAAAAAPAAAAAAAAAA8QAAAAAAAADyAAAAAAAAAPMA
                    AAAAAAAA9AAAAAAAAAD1AAAAAAAAAPYAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAPkAAAAAAAAA+gAA
                    AAAAAAD7AAAAAAAAAPwAAAAAAAAA/QAAAAAAAAD+AAAAAAAAAP8AAAAAAAAAAAEAAAAAAAABAQAA
                    AAAAAAIBAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAUBAAAAAAAABgEAAAAAAAAHAQAAAAAAAAgBAAAA
                    AAAACQEAAAAAAAAKAQAAAAAAAAsBAAAAAAAADAEAAAAAAAANAQAAAAAAAA4BAAAAAAAADwEAAAAA
                    AAAQAQAAAAAAABEBAAAAAAAAEgEAAAAAAAATAQAAAAAAABQBAAAAAAAAFQEAAAAAAAAWAQAAAAAA
                    ABcBAAAAAAAAGAEAAAAAAAAZAQAAAAAAABoBAAAAAAAAGwEAAAAAAAAcAQAAAAAAAB0BAAAAAAAA
                    HgEAAAAAAAAfAQAAAAAAACABAAAAAAAAIQEAAAAAAAAiAQAAAAAAACMBAAAAAAAAJAEAAAAAAAAl
                    AQAAAAAAACYBAAAAAAAAJwEAAAAAAAAoAQAAAAAAACkBAAAAAAAAKgEAAAAAAAArAQAAAAAAACwB
                    AAAAAAAALQEAAAAAAAAuAQAAAAAAAC8BAAAAAAAAMAEAAAAAAAAxAQAAAAAAADIBAAAAAAAAMwEA
                    AAAAAAA0AQAAAAAAADUBAAAAAAAANgEAAAAAAAA3AQAAAAAAADgBAAAAAAAAOQEAAAAAAAA6AQAA
                    AAAAADsBAAAAAAAAPAEAAAAAAAA9AQAAAAAAAD4BAAAAAAAAPwEAAAAAAABAAQAAAAAAAEEBAAAA
                    AAAAQgEAAAAAAABDAQAAAAAAAEQBAAAAAAAARQEAAAAAAABGAQAAAAAAAEcBAAAAAAAASAEAAAAA
                    AABJAQAAAAAAAEoBAAAAAAAASwEAAAAAAABMAQAAAAAAAE0BAAAAAAAATgEAAAAAAABPAQAAAAAA
                    AFABAAAAAAAAUQEAAAAAAABSAQAAAAAAAFMBAAAAAAAAVAEAAAAAAABVAQAAAAAAAFYBAAAAAAAA
                    VwEAAAAAAABYAQAAAAAAAFkBAAAAAAAAWgEAAAAAAABbAQAAAAAAAFwBAAAAAAAAXQEAAAAAAABe
                    AQAAAAAAAF8BAAAAAAAAYAEAAAAAAABhAQAAAAAAAGIBAAAAAAAAYwEAAAAAAABkAQAAAAAAAGUB
                    AAAAAAAAZgEAAAAAAABnAQAAAAAAAGgBAAAAAAAAaQEAAAAAAABqAQAAAAAAAGsBAAAAAAAAbAEA
                    AAAAAABtAQAAAAAAAG4BAAAAAAAAbwEAAAAAAABwAQAAAAAAAHEBAAAAAAAAcgEAAAAAAABzAQAA
                    AAAAAHQBAAAAAAAAdQEAAAAAAAB2AQAAAAAAAHcBAAAAAAAAeAEAAAAAAAB5AQAAAAAAAHoBAAAA
                    AAAAewEAAAAAAAB8AQAAAAAAAH0BAAAAAAAAfgEAAAAAAAB/AQAAAAAAAIABAAAAAAAAgQEAAAAA
                    AACCAQAAAAAAAIMBAAAAAAAAhAEAAAAAAACFAQAAAAAAAIYBAAAAAAAAhwEAAAAAAACIAQAAAAAA
                    AIkBAAAAAAAAigEAAAAAAACLAQAAAAAAAIwBAAAAAAAAjQEAAAAAAACOAQAAAAAAAI8BAAAAAAAA
                    kAEAAAAAAACRAQAAAAAAAJIBAAAAAAAAkwEAAAAAAACUAQAAAAAAAJUBAAAAAAAAlgEAAAAAAACX
                    AQAAAAAAAJgBAAAAAAAAmQEAAAAAAACaAQAAAAAAAJsBAAAAAAAAnAEAAAAAAACdAQAAAAAAAJ4B
                    AAAAAAAAnwEAAAAAAACgAQAAAAAAAKEBAAAAAAAAogEAAAAAAACjAQAAAAAAAKQBAAAAAAAApQEA
                    AAAAAACmAQAAAAAAAKcBAAAAAAAAqAEAAAAAAACpAQAAAAAAAKoBAAAAAAAAqwEAAAAAAACsAQAA
                    AAAAAK0BAAAAAAAArgEAAAAAAACvAQAAAAAAALABAAAAAAAAsQEAAAAAAACyAQAAAAAAALMBAAAA
                    AAAAtAEAAAAAAAC1AQAAAAAAALYBAAAAAAAAtwEAAAAAAAC4AQAAAAAAALkBAAAAAAAAugEAAAAA
                    AAC7AQAAAAAAALwBAAAAAAAAvQEAAAAAAAC+AQAAAAAAAL8BAAAAAAAAwAEAAAAAAADBAQAAAAAA
                    AMIBAAAAAAAAwwEAAAAAAADEAQAAAAAAAMUBAAAAAAAAxgEAAAAAAADHAQAAAAAAAMgBAAAAAAAA
                    yQEAAAAAAADKAQAAAAAAAMsBAAAAAAAAzAEAAAAAAADNAQAAAAAAAM4BAAAAAAAAzwEAAAAAAADQ
                    AQAAAAAAANEBAAAAAAAA0gEAAAAAAADTAQAAAAAAANQBAAAAAAAA
                name: spot_id
            - !!python/object/apply:pandas.core.indexes.base._new_Index
              - *id005
              - data: !!python/object/apply:numpy._core.multiarray._reconstruct
                  args:
                  - *id001
                  - !!python/tuple
                    - 0
                  - !!binary |
                    Yg==
                  state: !!python/tuple
                  - 1
                  - !!python/tuple
                    - 16
                  - *id002
                  - false
                  - !!binary |
                    AQAAAAAAAAACAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAI
                    AAAAAAAAAAkAAAAAAAAACgAAAAAAAAALAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAOAAAAAAAAAA8A
                    AAAAAAAAEAAAAAAAAAA=
                name: vehicle_type
            names:
            - spot_id
            - vehicle_type
            sortorder: null
      _typ: dataframe
      attrs: {}
    scale_by_group: false
    transformation: null
  time_idx: time_idx
  time_varying_known_categoricals:
  - dow
  - week
  - month
  - quarter
  - is_weekend
  - is_holiday
  time_varying_known_reals:
  - day_to_offday
  - offday_run
  - rain_mm_lag1
  - RH
  - W
  - inventory_est
  - has_inventory
  - avg_vehicle_age_inv
  - avg_standard_rate_inv
  time_varying_unknown_categoricals: null
  time_varying_unknown_reals:
  - lag_1
  - lag_7
  - lag_28
  - roll_mean_7
  - roll_std_7
  - utilization_7
  - vehicle_count
  - coupon_count
  - coupon_flag_prev1
  - coupon_count_lag7
  - coupon_per_vehicle
  - region_total_rev
  - region_vehicle_count
  - region_rev_per_vehicle
  - region_vehicle_mean_rev
  variable_groups: null
  weight: null
dropout: 0.2914981522194919
embedding_labels:
  dow: *id006
  is_holiday: *id007
  is_weekend: *id008
  month: *id009
  quarter: *id010
  region_code: *id011
  spot_id: *id012
  vehicle_type: *id013
  week: *id014
embedding_paddings:
- spot_id
- vehicle_type
embedding_sizes:
  dow: !!python/tuple
  - 7
  - 5
  is_holiday: !!python/tuple
  - 2
  - 1
  is_weekend: !!python/tuple
  - 2
  - 1
  month: !!python/tuple
  - 12
  - 6
  quarter: !!python/tuple
  - 4
  - 3
  region_code: !!python/tuple
  - 12
  - 6
  spot_id: !!python/tuple
  - 469
  - 50
  vehicle_type: !!python/tuple
  - 17
  - 8
  week: !!python/tuple
  - 52
  - 15
hidden_continuous_size: 21
hidden_continuous_sizes: {}
hidden_size: 64
learning_rate: 0.0012022644346174128
log_gradient_flow: false
log_interval: 10
log_val_interval: null
lstm_layers: 1
max_encoder_length: 60
monotone_constaints: {}
monotone_constraints: {}
optimizer: ranger
optimizer_params: null
output_size: 7
output_transformer: *id015
reduce_on_plateau_min_lr: 1.0e-05
reduce_on_plateau_patience: 4
reduce_on_plateau_reduction: 2.0
share_single_variable_networks: false
static_categoricals:
- spot_id
- vehicle_type
- region_code
static_reals:
- encoder_length
- rev_per_vehicle_center
- rev_per_vehicle_scale
time_varying_categoricals_decoder:
- dow
- week
- month
- quarter
- is_weekend
- is_holiday
time_varying_categoricals_encoder:
- dow
- week
- month
- quarter
- is_weekend
- is_holiday
time_varying_reals_decoder:
- day_to_offday
- offday_run
- rain_mm_lag1
- RH
- W
- inventory_est
- has_inventory
- avg_vehicle_age_inv
- avg_standard_rate_inv
- relative_time_idx
time_varying_reals_encoder:
- day_to_offday
- offday_run
- rain_mm_lag1
- RH
- W
- inventory_est
- has_inventory
- avg_vehicle_age_inv
- avg_standard_rate_inv
- relative_time_idx
- lag_1
- lag_7
- lag_28
- roll_mean_7
- roll_std_7
- utilization_7
- vehicle_count
- coupon_count
- coupon_flag_prev1
- coupon_count_lag7
- coupon_per_vehicle
- region_total_rev
- region_vehicle_count
- region_rev_per_vehicle
- region_vehicle_mean_rev
weight_decay: 0.0
x_categoricals:
- spot_id
- vehicle_type
- region_code
- dow
- week
- month
- quarter
- is_weekend
- is_holiday
x_reals:
- encoder_length
- rev_per_vehicle_center
- rev_per_vehicle_scale
- day_to_offday
- offday_run
- rain_mm_lag1
- RH
- W
- inventory_est
- has_inventory
- avg_vehicle_age_inv
- avg_standard_rate_inv
- relative_time_idx
- lag_1
- lag_7
- lag_28
- roll_mean_7
- roll_std_7
- utilization_7
- vehicle_count
- coupon_count
- coupon_flag_prev1
- coupon_count_lag7
- coupon_per_vehicle
- region_total_rev
- region_vehicle_count
- region_rev_per_vehicle
- region_vehicle_mean_rev
